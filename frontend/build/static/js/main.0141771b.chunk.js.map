{"version":3,"sources":["constants/authConstant.js","actions/authActions.js","constants/postConstant.js","components/Header.js","components/Footer.js","components/Message.js","components/Loader.js","components/PostModal.js","actions/postActions.js","components/PostCreater.js","components/Date.js","components/DeleteModal.js","components/Post.js","components/PostList.js","components/Meta.js","components/User.js","constants/userConstants.js","screens/HomeScreen.js","actions/userActions.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/VerifyScreen.js","screens/ForgotPasswordScreen.js","constants/profileConstants.js","components/ProfileModal.js","actions/profileActions.js","components/ProfileAvatarModal.js","screens/ProfileScreen.js","screens/PostScreen.js","screens/FeedbackScreen.js","screens/ResetPasswordScreen.js","App.js","store.js","reducers/authReducers.js","reducers/postReducers.js","reducers/profileReducers.js","reducers/userReducer.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_VERIFY_REQUEST","USER_VERIFY_SUCCESS","USER_VERIFY_FAIL","PASSWORD_FORGET_REQUEST","PASSWORD_FORGET_SUCCESS","PASSWORD_FORGET_FAIL","TOKEN_VERIFY_REQUEST","TOKEN_VERIFY_SUCCESS","TOKEN_VERIFY_FAIL","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAIL","logout","dispatch","a","type","localStorage","removeItem","POST_LIST_REQUEST","POST_LIST_SUCCESS","POST_LIST_FAIL","POST_LIKE_REQUEST","POST_LIKE_SUCCESS","POST_LIKE_FAIL","POST_CREATE_REQUEST","POST_CREATE_SUCCESS","POST_CREATE_FAIL","POST_DELETE_REQUEST","POST_DELETE_SUCCESS","POST_DELETE_FAIL","POST_COMMENT_REQUEST","POST_COMMENT_SUCCESS","POST_COMMENT_FAIL","USER_POST_LIST_REQUEST","USER_POST_LIST_SUCCESS","USER_POST_LIST_FAIL","POST_BY_ID_REQUEST","POST_BY_ID_SUCCESS","POST_BY_ID_FAIL","Header","history","user","useDispatch","avy","useSelector","state","userAvatar","avatar","useState","setAvatar","useEffect","JSON","stringify","Navbar","className","bg","expand","variant","collapseOnSelect","sticky","Container","fluid","to","Brand","Image","src","style","width","alt","Toggle","aria-controls","Collapse","id","Nav","Link","name","roundedCircle","height","NavDropdown","alignRight","Item","href","onClick","push","Footer","background","Row","Col","md","target","rel","defaultProps","Message","children","Alert","Loader","Spinner","animation","role","PostModal","props","uploading","setUploading","image","setImage","text","setText","picker","setPicker","userInfo","userLogin","uploadFileHandler","e","file","files","formData","FormData","append","config","headers","axios","post","data","imagePath","emojiPickerStyle","display","position","zIndex","right","Modal","size","aria-labelledby","centered","closeButton","Title","Body","Badge","isVerified","Form","onSubmit","preventDefault","getState","posts","postList","authorization","token","postImage","unshift","payload","response","message","createPost","onHide","Group","Control","as","row","placeholder","value","onChange","block","File","label","set","theme","title","exclude","onSelect","emoji","native","Button","disabled","PostCreater","modalShow","setModalShow","alertShow","setAlertShow","onClose","dismissible","Card","show","DateFormat","moment","format","DeleteModal","success","deletedPost","borderBottom","postId","userPostList","delete","filter","_id","toString","userPosts","postScreen","Post","commentInput","useRef","commentStatus","alreadyLiked","likes","find","r","comment","setComment","includes","like","setLike","length","likeCount","setLikeCount","comments","commentCount","setCommentCount","sm","date","Dropdown","Menu","Img","ListGroup","get","dataIndex","findIndex","userPostIndex","current","focus","map","textTransform","commentdate","commentText","slice","InputGroup","FormControl","ref","required","postById","put","newComment","loading","PostList","error","home","Meta","description","keywords","Helmet","content","User","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","HomeScreen","location","verifiedAlert","setVerifiedAlert","params","pathname","setShow","userList","users","verifyEmail","Heading","LoginScreen","email","setEmail","password","setPassword","search","setItem","login","controlId","Label","RegisterScreen","setName","setDate","validated","setValidated","event","currentTarget","checkValidity","stopPropagation","register","noValidate","hasValidation","Feedback","VerifyScreen","query","minHeight","fontSize","class","ForgotPasswordScreen","forgetEmail","forgotEmail","PROFILE_REQUEST","PROFILE_SUCCESS","PROFILE_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PROFILE_AVATAR_SUCCESS","Profile","profile","userProfile","bio","setBio","setLocation","facebook","setFacebook","twitter","setTwitter","github","setGithub","website","setWebsite","linkedin","setLinkedin","updateProfile","rows","column","ProfileAvatarModal","console","existing","getItem","parse","updateProfileAvatar","ProfileScreen","userId","match","AvatarModalShow","setAvatarModalShow","loadingUser","getProfileDetail","getUserPosts","startsWith","split","instagram","comment1","comment2","ProfileModal","PostScreen","getPostById","FeedbackScreen","frameborder","marginheight","marginwidth","ResetPasswordScreen","confirmPassword","setConfirmPassword","passwordError","setPasswordError","tokenVerify","resetPassword","resetLoad","resetSuccess","resetError","verifyForgetToken","App","path","component","exact","reducer","combineReducers","action","likeLoading","postCreate","status","intialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0141771b.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_VERIFY_REQUEST = 'USER_VERIFY_REQUEST'\nexport const USER_VERIFY_SUCCESS = 'USER_VERIFY_SUCCESS'\nexport const USER_VERIFY_FAIL = 'USER_VERIFY_FAIL'\n\nexport const PASSWORD_FORGET_REQUEST = 'PASSWORD_FORGET_REQUEST'\nexport const PASSWORD_FORGET_SUCCESS = 'PASSWORD_FORGET_SUCCESS'\nexport const PASSWORD_FORGET_FAIL = 'PASSWORD_FORGET_FAIL'\n\nexport const TOKEN_VERIFY_REQUEST = 'TOKEN_VERIFY_REQUEST'\nexport const TOKEN_VERIFY_SUCCESS = 'TOKEN_VERIFY_SUCCESS'\nexport const TOKEN_VERIFY_FAIL = 'TOKEN_VERIFY_FAIL'\n\nexport const RESET_PASSWORD_REQUEST = 'RESET_PASSWORD_REQUEST'\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS'\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL'\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  PASSWORD_FORGET_FAIL,\n  PASSWORD_FORGET_REQUEST,\n  PASSWORD_FORGET_SUCCESS,\n  TOKEN_VERIFY_REQUEST,\n  TOKEN_VERIFY_SUCCESS,\n  TOKEN_VERIFY_FAIL,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n} from '../constants/authConstant'\nimport axios from 'axios'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/v1/auth/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const register = (email, password, name, date) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/v1/auth/register',\n      { email, password, date, name },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => async (dispatch) => {\n  dispatch({ type: USER_LOGOUT })\n\n  localStorage.removeItem('userInfo')\n}\n\nexport const getEmail = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PASSWORD_FORGET_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get('/v1/auth/verifyEmail', config)\n\n    dispatch({\n      type: PASSWORD_FORGET_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PASSWORD_FORGET_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const forgotEmail = (email) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PASSWORD_FORGET_REQUEST })\n\n    const config = {\n      headers: {\n        'Content-Type': `application/json`,\n      },\n    }\n\n    const { data } = await axios.post(\n      '/v1/auth/forgotPassword',\n      { email },\n      config\n    )\n\n    dispatch({\n      type: PASSWORD_FORGET_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PASSWORD_FORGET_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const verifyForgetToken = (token) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: TOKEN_VERIFY_REQUEST })\n\n    const { data } = await axios.get(`/v1/auth/tokenVerify/${token}`)\n\n    dispatch({\n      type: TOKEN_VERIFY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: TOKEN_VERIFY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const resetPassword =\n  (token, password) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: RESET_PASSWORD_REQUEST })\n\n      const config = {\n        headers: {\n          'Content-Type': `application/json`,\n        },\n      }\n\n      const { data } = await axios.post(\n        `/v1/auth/resetPassword/${token}`,\n        { password },\n        config\n      )\n\n      dispatch({\n        type: RESET_PASSWORD_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      dispatch({\n        type: RESET_PASSWORD_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      })\n    }\n  }\n","export const POST_LIST_REQUEST = 'POST_LIST_REQUEST'\nexport const POST_LIST_SUCCESS = 'POST_LIST_SUCCESS'\nexport const POST_LIST_FAIL = 'POST_LIST_FAIL'\n\nexport const POST_LIKE_REQUEST = 'POST_LIKE_REQUEST'\nexport const POST_LIKE_SUCCESS = 'POST_LIKE_SUCCESS'\nexport const POST_LIKE_FAIL = 'POST_LIKE_FAIL'\nexport const POST_LIKE_RESET = 'POST_LIKE_RESET'\n\nexport const POST_CREATE_REQUEST = 'POST_CREATE_REQUEST'\nexport const POST_CREATE_SUCCESS = 'POST_CREATE_SUCCESS'\nexport const POST_CREATE_FAIL = 'POST_CREATE_FAIL'\n\nexport const POST_DELETE_REQUEST = 'POST_DELETE_REQUEST'\nexport const POST_DELETE_SUCCESS = 'POST_DELETE_SUCCESS'\nexport const POST_DELETE_FAIL = 'POST_DELETE_FAIL'\n\nexport const POST_COMMENT_REQUEST = 'POST_COMMENT_REQUEST'\nexport const POST_COMMENT_SUCCESS = 'POST_COMMENT_SUCCESS'\nexport const POST_COMMENT_FAIL = 'POST_COMMENT_FAIL'\n\nexport const USER_POST_LIST_REQUEST = 'USER_POST_LIST_REQUEST'\nexport const USER_POST_LIST_SUCCESS = 'USER_POST_LIST_SUCCESS'\nexport const USER_POST_LIST_FAIL = 'USER_POST_LIST_FAIL'\n\nexport const POST_BY_ID_REQUEST = 'POST_BY_ID_REQUEST'\nexport const POST_BY_ID_SUCCESS = 'POST_BY_ID_SUCCESS'\nexport const POST_BY_ID_FAIL = 'POST_BY_ID_FAIL'\n","import React, { useEffect, useState } from 'react'\nimport { Container, Image, Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/authActions'\n\nconst Header = ({ history, user }) => {\n  const dispatch = useDispatch()\n\n  const userAvatar = useSelector((state) => state.userAvatar)\n  const { avatar: avy } = userAvatar\n\n  const [avatar, setAvatar] = useState(user && user.avatar)\n\n  useEffect(() => {\n    if (JSON.stringify(avy) !== '{}') {\n      setAvatar(avy)\n    }\n  }, [avy])\n\n  const logoutHandler = () => {\n    dispatch(logout())\n    history.push('/login')\n  }\n\n  return (\n    <Navbar\n      className='shadow-sm'\n      bg='body_primary'\n      expand='lg'\n      variant='dark'\n      collapseOnSelect\n      sticky='top'\n    >\n      <Container fluid>\n        <LinkContainer to='/'>\n          <Navbar.Brand>\n            <Image\n              className='text-primary text-4 font-weight-bold'\n              src='\\logo.svg'\n              style={{ width: '60%' }}\n              alt='Linkdev'\n              fluid\n            ></Image>\n          </Navbar.Brand>\n        </LinkContainer>\n\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='ml-auto text-2'>\n            <LinkContainer to='/'>\n              <Nav.Link className='bg-body_tertiary text-primary p-2 px-3 rounded-lg'>\n                <i className='fas fa-home mr-2 '></i>Home\n              </Nav.Link>\n            </LinkContainer>\n            <LinkContainer to={`/profile/${user && user.id}`}>\n              <Nav.Link className='d-flex text-1 align-items-center text-color_secondary capital'>\n                <Image\n                  src={avatar}\n                  alt={user && user.name}\n                  className='mx-2 '\n                  fluid\n                  roundedCircle\n                  style={{\n                    height: '30px',\n                    width: '30px',\n                  }}\n                />{' '}\n                {user && user.name}\n              </Nav.Link>\n            </LinkContainer>\n            <NavDropdown\n              className='bg-body_secondary text-white px-2 rounded-circle text-white'\n              id='setting'\n              alignRight\n            >\n              <LinkContainer to={`/profile/${user && user.id}`}>\n                <NavDropdown.Item>\n                  <i className='fas fa-user mr-2'></i> Profile\n                </NavDropdown.Item>\n              </LinkContainer>\n              <LinkContainer to='/feedback'>\n                <NavDropdown.Item>\n                  <i className='fas fa-comment-alt mr-2'></i> Give Feedback\n                </NavDropdown.Item>\n              </LinkContainer>\n\n              <NavDropdown.Item href='https://discord.gg/SRWGYHzN'>\n                <i className='fab fa-discord mr-2'></i>Join Discord\n              </NavDropdown.Item>\n\n              <NavDropdown.Item onClick={logoutHandler}>\n                <i className='fas fa-sign-out-alt mr-2'></i>Logout\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\n\nimport { LinkContainer } from 'react-router-bootstrap'\nconst Footer = ({ background }) => {\n  return (\n    <footer className={background}>\n      <Container>\n        <Row className='footer align-items-center justify-content-between'>\n          <Col md={6}>\n            <span>Copyright &copy;linkdev </span>\n            <span>v1.0</span>\n          </Col>\n          <Col\n            md={6}\n            className='ml-auto text-right d-flex flex-wrap align-items-center justify-content-end'\n          >\n            <LinkContainer to='/privacy' className='mx-2'>\n              <span className='mx-1 cursor'>Privacy & Policy</span>\n            </LinkContainer>\n            <a href='https://www.privacypolicygenerator.info/live.php?'>\n              <span className='mx-1 text-color_primary cursor'>\n                Give Feedback\n              </span>\n            </a>\n\n            <a\n              href='https://discord.gg/8h4Cfj5enj'\n              target='_blank'\n              rel='noreferrer'\n            >\n              <i className='icon fab fa-discord mx-2 text-color_primary'></i>\n            </a>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nFooter.defaultProps = {\n  background: 'bg_body_primary',\n}\n\nexport default Footer\n","import { Alert } from 'react-bootstrap'\nimport React from 'react'\n\nconst Message = ({ variant, children }) => {\n  return (\n    <Alert className='mt-4' variant={variant}>\n      {children}\n    </Alert>\n  )\n}\n\nMessage.defaultProps = {\n  variant: 'danger',\n  children: 'danger',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <div className='d-flex justify-content-center'>\n      <Spinner\n        className='mt-5'\n        animation='border'\n        role='status'\n        variant='primary'\n        style={{ width: '10rem', height: '10rem' }}\n      >\n        <span className='sr-only'>Loading...</span>\n      </Spinner>\n    </div>\n  )\n}\n\nexport default Loader\n","import { useState } from 'react'\nimport { Badge, Button, Col, Form, Image, Modal, Row } from 'react-bootstrap'\nimport axios from 'axios'\nimport { Picker } from 'emoji-mart'\nimport 'emoji-mart/css/emoji-mart.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createPost } from '../actions/postActions'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Loader from './Loader'\n\nfunction PostModal(props) {\n  const dispatch = useDispatch()\n\n  //eslint-disable-next-line\n  const [uploading, setUploading] = useState(false)\n  const [image, setImage] = useState(``)\n  const [text, setText] = useState(``)\n  const [picker, setPicker] = useState(false)\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n    setImage('')\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/v1/upload', formData, config)\n\n      setImage(data.imagePath)\n      setUploading(false)\n    } catch (error) {\n      setUploading(false)\n    }\n  }\n\n  const emojiPickerStyle = {\n    display: picker ? 'block' : 'none',\n    position: 'absolute',\n    zIndex: '100',\n    right: '0',\n    height: ' 20rem',\n    width: '20rem',\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    dispatch(createPost(text, image))\n\n    props.onHide()\n    setText('')\n    setImage('')\n    setPicker(false)\n  }\n\n  const emojiOpener = () => {\n    setPicker(!picker)\n  }\n\n  return (\n    <Modal\n      {...props}\n      size='lg'\n      aria-labelledby='contained-modal-title-vcenter'\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id='contained-modal-title-vcenter text-center'>\n          Create Post\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Row className='align-items-center justify-content-between'>\n          <Col className=''>\n            <LinkContainer to={`/profile/${userInfo && userInfo.id}`}>\n              <div className='d-inline-flex align-items-center cursor capital '>\n                <Image\n                  src={userInfo && userInfo.avatar}\n                  style={{ width: '50px', height: '50px' }}\n                  fluid='true'\n                  roundedCircle\n                />\n\n                <div className='ml-3'>\n                  <h6 className='text-2 text-primary mb-0'>\n                    {userInfo && userInfo.name}\n                  </h6>\n                  <Badge variant='blue_primary'>\n                    {userInfo && userInfo.isVerified ? 'Creator' : 'Viewer'}\n                  </Badge>\n                </div>\n              </div>\n            </LinkContainer>\n          </Col>\n        </Row>\n\n        <Form onSubmit={submitHandler} className='mt-2'>\n          <Form.Group className='text'>\n            <Form.Control\n              className='create_input bg-body_secondary border-0 text-blue_secondary form_create'\n              as='textarea'\n              row={50}\n              size='lg'\n              placeholder={`What's on your mind, ${\n                userInfo && userInfo.name\n              } ?`}\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n            ></Form.Control>\n\n            {image && <Image src={image} fluid block />}\n          </Form.Group>\n          {uploading && (\n            <>\n              <Loader />{' '}\n              <h4 className='text-primary text-center mt-5'>\n                Uploading Your Image....\n              </h4>\n            </>\n          )}\n          <Form.Group className='file'>\n            <Row className='align-items-center pr-5 postion-relative'>\n              <Col md={6}>\n                <Form.File\n                  id='image-file'\n                  className='bg-body_secondary d-inline-block'\n                  label='Insert Image'\n                  onChange={uploadFileHandler}\n                ></Form.File>\n              </Col>\n\n              <div className='emoji_picker ml-auto  postion-relative'>\n                <i\n                  onClick={emojiOpener}\n                  className='text-primary icon fal fa-smile-beam cursor'\n                ></i>\n                <Picker\n                  set='google'\n                  theme='dark'\n                  title='Pick Your Emoji'\n                  exclude={['flags']}\n                  style={emojiPickerStyle}\n                  onSelect={(emoji) => setText(text + emoji.native)}\n                />\n              </div>\n            </Row>\n          </Form.Group>\n\n          <Button\n            type='submit'\n            variant='primary'\n            block\n            disabled={!image && !text}\n          >\n            Post\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default PostModal\n","import axios from 'axios'\nimport {\n  POST_BY_ID_FAIL,\n  POST_BY_ID_REQUEST,\n  POST_BY_ID_SUCCESS,\n  POST_COMMENT_FAIL,\n  POST_COMMENT_REQUEST,\n  POST_COMMENT_SUCCESS,\n  POST_CREATE_FAIL,\n  POST_CREATE_REQUEST,\n  POST_CREATE_SUCCESS,\n  POST_DELETE_FAIL,\n  POST_DELETE_REQUEST,\n  POST_DELETE_SUCCESS,\n  POST_LIKE_FAIL,\n  POST_LIKE_REQUEST,\n  POST_LIKE_SUCCESS,\n  POST_LIST_FAIL,\n  POST_LIST_REQUEST,\n  POST_LIST_SUCCESS,\n  USER_POST_LIST_FAIL,\n  USER_POST_LIST_REQUEST,\n  USER_POST_LIST_SUCCESS,\n} from '../constants/postConstant'\n\nexport const getPosts = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: POST_LIST_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get('/v1/posts', config)\n\n    dispatch({\n      type: POST_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: POST_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const likePost = (postId) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: POST_LIKE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n      postList,\n      userPostList,\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/v1/post/like/${postId}`, config)\n\n    const dataIndex = postList.posts.findIndex(\n      (post) => post._id.toString() === data._id\n    )\n\n    const userPostIndex = userPostList.posts.findIndex(\n      (post) => post._id.toString() === data._id\n    )\n\n    postList.posts[dataIndex] = data\n    userPostList.posts[userPostIndex] = data\n\n    dispatch({\n      type: POST_LIKE_SUCCESS,\n      payload: postList.posts,\n      userPostList: userPostList.posts,\n    })\n  } catch (error) {\n    dispatch({\n      type: POST_LIKE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const createPost = (text, image) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: POST_CREATE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const {\n      postList: { posts },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(\n      '/v1/posts',\n      { text, postImage: image },\n      config\n    )\n\n    posts.unshift(data)\n\n    dispatch({\n      type: POST_CREATE_SUCCESS,\n      payload: posts,\n    })\n  } catch (error) {\n    dispatch({\n      type: POST_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserPosts = (userId) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_POST_LIST_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/v1/posts/${userId}`, config)\n\n    dispatch({\n      type: USER_POST_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_POST_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const commentPost = (text, postId) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: POST_COMMENT_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n      postById,\n      postList: { posts },\n      userPostList,\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/v1/post/comment/${postId}`,\n      { text },\n      config\n    )\n\n    posts.length !== 0 &&\n      posts.find((post) => post._id === postId).comments.push(data.newComment)\n\n    userPostList &&\n      userPostList.posts.length !== 0 &&\n      userPostList.posts\n        .find((post) => post._id === postId)\n        .comments.push(data.newComment)\n\n    postById && postById.post && postById.post.comments.push(data.newComment)\n\n    dispatch({\n      type: POST_COMMENT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: POST_COMMENT_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getPostById = (postId) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: POST_BY_ID_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/v1/post/${postId}`, config)\n\n    dispatch({\n      type: POST_BY_ID_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: POST_BY_ID_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deletePostById = (postId) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: POST_DELETE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n      postList,\n      userPostList,\n    } = getState()\n\n    const config = {\n      headers: {\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/v1/post/${postId}`, config)\n\n    dispatch({\n      type: POST_DELETE_SUCCESS,\n      payload: postList.posts.filter((post) => post._id.toString() !== postId),\n      userPosts: userPostList.posts.filter(\n        (post) => post._id.toString() !== postId\n      ),\n    })\n  } catch (error) {\n    dispatch({\n      type: POST_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport { Alert, Button, Card, Col, Image, Row } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport PostModal from './PostModal'\n\nconst PostCreater = ({ user }) => {\n  const [modalShow, setModalShow] = useState(false)\n\n  const [alertShow, setAlertShow] = useState(false)\n\n  const userAvatar = useSelector((state) => state.userAvatar)\n  const { avatar: avy } = userAvatar\n\n  const [avatar, setAvatar] = useState(user && user.avatar)\n\n  useEffect(() => {\n    if (JSON.stringify(avy) !== '{}') {\n      setAvatar(avy)\n    }\n  }, [avy])\n\n  const clickHandler = () => {\n    if (user && !user.isVerified) {\n      setAlertShow(true)\n    } else {\n      setModalShow(true)\n    }\n  }\n\n  return (\n    <>\n      {alertShow && (\n        <Alert variant='danger' onClose={() => setAlertShow(false)} dismissible>\n          Your Email is not verified to post on Linkdev. Verify Your Email To\n          Post{' '}\n        </Alert>\n      )}\n\n      <Card className='rounded-lg p-2'>\n        <Row className='p-2 px-4  align-items-center'>\n          <Col md={12} className='d-flex'>\n            <Image\n              className=' mr-2'\n              src={avatar}\n              style={{ width: '10%' }}\n              fluid='true'\n              roundedCircle\n            />\n\n            <Button\n              className='btn_post_create btn-body_tertiary rounded-pill text-left capital'\n              block\n              size='lg'\n              onClick={clickHandler}\n              // disabled={user && !user.isVerified}\n            >\n              What on Your Mind, {user && user.name} ?\n            </Button>\n          </Col>\n        </Row>\n      </Card>\n      <PostModal show={modalShow} onHide={() => setModalShow(false)} />\n    </>\n  )\n}\n\nexport default PostCreater\n","import React from 'react'\nimport moment from 'moment'\n\nconst DateFormat = ({ children }) => {\n  return <p className='mb-0 text-secondary'>{moment(children).format('LLL')}</p>\n}\n\nexport default DateFormat\n","import React from 'react'\nimport { Button, Modal } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deletePostById } from '../actions/postActions'\n\nexport default function DeleteModal(props) {\n  const dispatch = useDispatch()\n\n  const deletedPost = useSelector((state) => state.deletedPost)\n  const { success } = deletedPost\n\n  const deletePostHandler = () => {\n    dispatch(deletePostById(props.id))\n\n    if (success) {\n      props.postScreen && props.history.push('/')\n      props.onHide()\n    }\n  }\n\n  return (\n    <Modal\n      {...props}\n      size='lg'\n      aria-labelledby='contained-modal-title-vcenter'\n      centered\n    >\n      <Modal.Header closeButton style={{ borderBottom: 'none' }}>\n        <Modal.Title id='contained-modal-title-vcenter text-1'>\n          Are you sure you want to delete this post?\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Button\n          size='lg'\n          className='mr-3 px-4'\n          onClick={deletePostHandler}\n          variant='danger'\n        >\n          Delete\n        </Button>\n        <Button\n          onClick={props.onHide}\n          size='lg'\n          className='bg-transparent text-color_primary px-4 border-0'\n        >\n          Cancel\n        </Button>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  Button,\n  Card,\n  Col,\n  Dropdown,\n  FormControl,\n  Image,\n  InputGroup,\n  ListGroup,\n  Row,\n} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { commentPost, likePost } from '../actions/postActions'\n\nimport DateFormat from './Date'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\nimport DeleteModal from './DeleteModal'\n\nconst Post = ({ post, postScreen, history }) => {\n  const dispatch = useDispatch()\n\n  const commentInput = useRef(null)\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const commentStatus = useSelector((state) => state.commentStatus)\n\n  const alreadyLiked = post.likes.find((r) =>\n    r.user ? r.user.toString() === userInfo.id.toString() : ''\n  )\n\n  const [comment, setComment] = useState('')\n  const [like, setLike] = useState(post.likes.includes(alreadyLiked))\n\n  const [likeCount, setLikeCount] = useState(post.likes.length)\n  const [commentCount, setCommentCount] = useState(\n    post && post.comments && post.comments.length\n  )\n\n  const userAvatar = useSelector((state) => state.userAvatar)\n  const { avatar: avy } = userAvatar\n\n  const [avatar, setAvatar] = useState(userInfo && userInfo.avatar)\n\n  const [modalShow, setModalShow] = useState(false)\n\n  useEffect(() => {\n    if (JSON.stringify(avy) !== '{}') {\n      setAvatar(avy)\n    }\n  }, [avy])\n\n  const commentButtonHandler = () => {\n    commentInput.current.focus()\n  }\n\n  const likeHandler = () => {\n    setLike(!like)\n    // setLikeCount(!likeCount)\n    if (!like) {\n      setLikeCount(likeCount + 1)\n    } else {\n      setLikeCount(likeCount - 1)\n    }\n    dispatch(likePost(post._id))\n  }\n\n  const commentHandler = () => {\n    dispatch(commentPost(comment, post._id))\n    setCommentCount(commentCount + 1)\n    setComment('')\n  }\n\n  return (\n    <>\n      <Card className='rounded-lg my-4'>\n        <Card.Body className='px-0 py-1'>\n          <Row className='p-2 px-2 align-items-center justify-content-between'>\n            <LinkContainer to={`/profile/${post.user}`}>\n              <Col sm={8} className='d-flex align-items-center cursor'>\n                <Image\n                  src={post.avatar}\n                  style={{ width: '50px', height: '50px' }}\n                  fluid='true'\n                  alt={post.name}\n                  roundedCircle\n                />\n                <div className='ml-3'>\n                  <h6 className='text-2 text-primary mb-0 capital'>\n                    {post.name}\n                  </h6>\n                  <DateFormat>{post.date}</DateFormat>\n                </div>\n              </Col>\n            </LinkContainer>\n\n            <Col sm={4} className='text-right pr-4'>\n              {/* <i className='fas fa-ellipsis-v icon'></i> */}\n              {post.user.toString() === userInfo.id.toString() && (\n                <Dropdown alignRight>\n                  <Dropdown.Toggle\n                    className='bg-transparent border-0 text-color_primary dp_delete'\n                    id='dropdown-delete'\n                  >\n                    <i className='fas fa-ellipsis-v icon'></i>\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    <Dropdown.Item onClick={() => setModalShow(true)}>\n                      <i className='fas fa-trash mr-2'></i>Delete Post\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              )}\n              <DeleteModal\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                postScreen={postScreen}\n                history={history}\n                id={post._id}\n              />\n            </Col>\n          </Row>\n\n          {post.postImage ? (\n            <>\n              <p className='pl-2 my-1 text-2'>{post.text}</p>\n              <Card.Img src={post.postImage} alt={post.name} fluid />\n            </>\n          ) : (\n            <h2 className='pl-2 my-1 '>{post.text}</h2>\n          )}\n\n          <ListGroup className='px-3' variant='flush'>\n            <ListGroup.Item>\n              <Row className='align-items-center justify-content-between'>\n                <Col className='text-left'>\n                  <i className='fas fa-thumbs-up text-primary mr-2'></i>\n                  <span>{likeCount} Likes</span>\n                </Col>\n                <Col className='text-right'>\n                  <span>{commentCount} Comments</span>\n                  <i className='fas fa-comment-alt text-primary ml-2'></i>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Row className='align-items-center justify-content-between'>\n                <Col className='text-left font-weight-light post_button'>\n                  <span\n                    className={`${\n                      like ? 'text-primary' : 'text-color_primary hover '\n                    } `}\n                    onClick={likeHandler}\n                  >\n                    <i\n                      className={` fa-thumbs-up icon ${\n                        like ? 'fas' : 'fal'\n                      }  mr-2`}\n                    ></i>\n                    <span className='text-2'>Like</span>\n                  </span>\n                </Col>\n                <Col className='text-center font-weight-light post_button'>\n                  <span className='hover' onClick={commentButtonHandler}>\n                    <i className='fal fa-comment-alt icon  mr-2'></i>\n                    <span className='text-2'>Comment</span>\n                  </span>\n                </Col>\n                <Col className='text-right font-weight-light post_button'>\n                  <span className='hover'>\n                    <i className='fal fa-share icon  mr-2'></i>\n                    <span className='text-2'>Share</span>\n                  </span>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item className='text-center'>\n              {postScreen &&\n                post.comments &&\n                post.comments.map((comment) => (\n                  <Row className={`align-items-center mb-2`}>\n                    <Col\n                      md={12}\n                      className='px-0 text-left d-flex align-items-center'\n                    >\n                      <Image\n                        className=' mr-2'\n                        src={comment.avatar}\n                        alt={comment.user}\n                        style={{ width: '8%' }}\n                        fluid='true'\n                        roundedCircle\n                      />\n                      <div className='bg-body_tertiary p-2 px-4 rounded-pill d-flex flex-column  justify-content-center'>\n                        <h6\n                          className='mb-0 text-1 d-flex align-items-center'\n                          style={{ textTransform: 'capitalize' }}\n                        >\n                          {comment.name} &nbsp;\n                          <span className='text-0 text-secodary font-weight-light my-auto'>\n                            -&nbsp;\n                            {moment(comment && comment.commentdate).format(\n                              'Do MMMM,h:mm a'\n                            )}\n                          </span>\n                        </h6>\n                        <p className='mb-0 text-1'>{comment.commentText}</p>\n                      </div>\n                    </Col>\n                  </Row>\n                ))}\n\n              {!postScreen &&\n                post.comments &&\n                post.comments\n                  .slice(commentCount - 2, commentCount)\n                  .map((comment) => (\n                    <Row className={`align-items-center mb-2`}>\n                      <Col\n                        md={12}\n                        className='px-0 text-left d-flex align-items-center'\n                      >\n                        <Image\n                          className=' mr-2'\n                          src={comment.avatar}\n                          alt={comment.user}\n                          style={{ width: '8%' }}\n                          fluid='true'\n                          roundedCircle\n                        />\n                        <div className='bg-body_tertiary p-2 px-4 rounded-pill d-flex flex-column  justify-content-center'>\n                          <h6\n                            className='mb-0 text-1 d-flex align-items-center'\n                            style={{ textTransform: 'capitalize' }}\n                          >\n                            {comment.name} &nbsp;\n                            <span className='text-0 text-secodary font-weight-light my-auto'>\n                              -&nbsp;\n                              {moment(comment && comment.commentdate).format(\n                                'Do MMMM,h:mm a'\n                              )}\n                            </span>\n                          </h6>\n                          <p className='mb-0 text-1'>{comment.commentText}</p>\n                        </div>\n                      </Col>\n                    </Row>\n                  ))}\n\n              {!postScreen && commentCount > 2 && (\n                <Link to={`/post/${post._id}`}>\n                  <span className='mx-auto text-1 font-weight-light'>\n                    View More Comments\n                  </span>\n                </Link>\n              )}\n\n              <Row className='align-items-center mt-2'>\n                <Col md={10} className='px-0 d-flex'>\n                  <Image\n                    className=' mr-2'\n                    src={avatar}\n                    alt={userInfo.name}\n                    style={{ width: '10%' }}\n                    fluid='true'\n                    roundedCircle\n                  />\n                  <InputGroup style={{ width: '90%' }}>\n                    <FormControl\n                      ref={commentInput}\n                      className='bg-body_tertiary border-0 text-blue_secondary rounded-pill'\n                      type='text'\n                      placeholder='Write a comment'\n                      value={comment}\n                      size='lg'\n                      required\n                      onChange={(e) => setComment(e.target.value)}\n                    ></FormControl>\n                  </InputGroup>\n                </Col>\n\n                <Col md={2} className='px-1'>\n                  <Button\n                    onClick={commentHandler}\n                    variant='primary rounded-pill px-4'\n                    size='small'\n                    disabled={!comment}\n                  >\n                    {commentStatus && commentStatus.loading\n                      ? 'Posting'\n                      : 'Post'}\n                  </Button>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card.Body>\n      </Card>\n    </>\n  )\n}\n\nexport default Post\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Post from './Post'\n\nimport Message from './Message'\nimport Loader from './Loader'\n\nconst PostList = () => {\n  const postList = useSelector((state) => state.postList)\n  const { loading, posts, error } = postList\n\n  return error ? (\n    <Message>{error}</Message>\n  ) : loading ? (\n    <Loader />\n  ) : (\n    posts.map((post) => <Post key={post._id} post={post} home={true} />)\n  )\n\n  // return <Loader />\n}\n\nexport default PostList\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keywords' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Linkdev',\n  keywords: 'social,media,community,linkdev,share',\n  description:\n    ' Log into Linkdev to start sharing and connecting with developers and be the part of best community in the world.',\n}\n\nexport default Meta\n","import React from 'react'\nimport { Row, Image, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction User({ user }) {\n  return (\n    <Row>\n      <LinkContainer to={`/profile/${user && user._id}`}>\n        <Col md={10} className='d-flex my-2 align-items-center '>\n          <Image\n            src={user && user.avatar}\n            style={{ width: '40px', height: '40px' }}\n            fluid='true'\n            roundedCircle\n            className='cursor'\n          />\n          <h6 className='ml-2 cursor capital'>{user && user.name}</h6>\n        </Col>\n      </LinkContainer>\n    </Row>\n  )\n}\n\nexport default User\n","export const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\n","import React, { useEffect, useState } from 'react'\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getEmail } from '../actions/authActions'\nimport { getPosts } from '../actions/postActions'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport Message from '../components/Message'\n\nimport PostCreater from '../components/PostCreater'\nimport PostList from '../components/PostList'\nimport Meta from '../components/Meta'\nimport User from '../components/User'\nimport { getUsers } from '../actions/userActions'\nimport Loader from '../components/Loader'\n\nconst HomeScreen = ({ history, location }) => {\n  const dispatch = useDispatch()\n  const [verifiedAlert, setVerifiedAlert] = useState(true)\n\n  const params = location.pathname\n\n  const [show, setShow] = useState(true)\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userList = useSelector((state) => state.userList)\n  const { users, loading, error } = userList\n\n  const verifyEmail = useSelector((state) => state.verifyEmail)\n  const { message } = verifyEmail\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n\n    dispatch(getPosts())\n    dispatch(getUsers())\n  }, [history, userInfo, dispatch])\n\n  const verifyHandler = () => {\n    dispatch(getEmail())\n    setShow(false)\n  }\n\n  return (\n    <div>\n      <Meta title='Home - Linkdev' />\n      <Header history={history} user={userInfo} />\n\n      <div className='main_content mt-4'>\n        <Container fluid>\n          <Row className='justify-content-between'>\n            <Col md={3}></Col>\n            <Col md={5}>\n              {params && params.toString() === '/verified' && verifiedAlert && (\n                <Alert\n                  variant='success'\n                  onClose={() => setVerifiedAlert(false)}\n                  dismissible\n                >\n                  <h2 className='font-weight-light'>You are a creater now</h2>\n                </Alert>\n              )}\n              {params && params.toString() === '/notverified' && verifiedAlert && (\n                <Alert\n                  variant='danger'\n                  onClose={() => setVerifiedAlert(false)}\n                  dismissible\n                >\n                  <h2 className='font-weight-light'>\n                    Soory, There was Some Error verifying your Account.\n                  </h2>\n                </Alert>\n              )}\n              {message && (\n                <Message variant='success'>{message.message}</Message>\n              )}\n\n              {userInfo && !userInfo.isVerified && show && (\n                <Alert\n                  variant='warning'\n                  onClose={() => setShow(false)}\n                  dismissible\n                >\n                  <Alert.Heading>Verify Your Email Address</Alert.Heading>\n                  <h6 className='text-2 mb-2'>\n                    You are just Viewer Now. To be a creater and post amazing\n                    posts,\n                  </h6>\n                  <Button variant='outline-warning' onClick={verifyHandler}>\n                    Verify Email Address\n                  </Button>\n                </Alert>\n              )}\n\n              <PostCreater user={userInfo} history={history} />\n              <PostList />\n            </Col>\n            <Col md={3} className='pl-0'>\n              <h4>\n                <i className='fas fa-user mb-2'></i> Let's Connect {users.length}\n              </h4>\n              {loading && <Loader />}\n              {error && <Message>{error}</Message>}\n              {users ? users.map((user) => <User user={user} />) : ''}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      <Footer background='bg-body_secondary' />\n    </div>\n  )\n}\n\nexport default HomeScreen\n","import axios from 'axios'\nimport {\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n} from '../constants/userConstants'\n\nexport const getUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_LIST_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get('/v1/users', config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Container, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login } from '../actions/authActions'\n\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Footer from '../components/Footer'\nimport Message from '../components/Message'\nimport Meta from '../components/Meta'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { error, userInfo } = userLogin\n\n  // const redirect = location.search ? location.search.split('?')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push('/')\n    }\n  }, [history, userInfo])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <>\n      <Meta title='Linkdev - Login' />\n      <Container>\n        <Row className='login_mainContent align-items-center justify-content-between'>\n          <Col md={5}>\n            <Image src='\\logo.svg' fluid='true' />\n            <p className='my-2 text_desc'>\n              Connect with developers all around the world on Linkdev\n            </p>\n          </Col>\n          <Col md={5} className='bg-body_secondary p-5 rounded-lg'>\n            <h1>Sign In</h1>\n            {error && <Message>{error}</Message>}\n            {/* {loading && <Loader />} */}\n            {location.search &&\n              location.search.toString() === '?passwordChanged' && (\n                <Message variant='success'>\n                  Your Password was successfully changed\n                </Message>\n              )}\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId='email'>\n                <Form.Label className='form_label'>Email Adress</Form.Label>\n                <Form.Control\n                  className='bg-body_tertiary border-0 text-blue_secondary'\n                  size='lg'\n                  type='email'\n                  placeholder='Enter Your Email Address'\n                  value={email}\n                  required\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  className='bg-body_tertiary border-0'\n                  size='lg'\n                  type='password'\n                  placeholder='Enter password'\n                  value={password}\n                  required\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Button\n                className='text-white'\n                type='submit'\n                variant='primary'\n                size='lg'\n                block\n              >\n                Sign In\n              </Button>\n            </Form>\n            <Link to={'/forgotpassword'} className='d-block text-center mt-3'>\n              Forgot Password?\n            </Link>\n            <hr className='bg-blue_secondary border-bottom-2' />\n            <Row className='py-3'>\n              <Col>\n                <LinkContainer to='/register'>\n                  <Button\n                    className='text-white'\n                    type='submit'\n                    variant='blue_primary'\n                    size='lg'\n                    block\n                  >\n                    Create New Account\n                  </Button>\n                </LinkContainer>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Footer />\n    </>\n  )\n}\n\nexport default LoginScreen\n","import React, { useEffect, useState } from 'react'\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  Image,\n  InputGroup,\n  Row,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { register } from '../actions/authActions'\nimport Footer from '../components/Footer'\nimport Message from '../components/Message'\nimport Meta from '../components/Meta'\n\nconst RegisterScreen = ({ history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [name, setName] = useState('')\n  const [date, setDate] = useState('')\n  const [validated, setValidated] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo, error } = userLogin\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push('/')\n    }\n  }, [history, userInfo, validated])\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.stopPropagation()\n    } else {\n      dispatch(register(email, password, name, date))\n    }\n\n    setValidated(true)\n  }\n\n  return (\n    <>\n      <Meta title='Create Your Account' />\n      <Container>\n        <Row className='login_mainContent align-items-center justify-content-between'>\n          <Col md={5}>\n            <Image src='./logo.svg' fluid='true' />\n            <p className='my-2 text_desc'>\n              Connect with developers all around the world on Linkdev\n            </p>\n          </Col>\n          <Col md={5} className='bg-body_secondary p-5 rounded-lg'>\n            <h1 className='mb-0'>Create Account</h1>\n            <p className='text-blue_secondary mt-0 mb-1'>It's quick and easy</p>\n            {error && <Message>{error}</Message>}\n            {/* {loading && <Loader />} */}\n\n            <Form onSubmit={submitHandler} noValidate validated={validated}>\n              <Form.Group className='mb-1' controlId='name'>\n                <Form.Label className='form_label mb-1'>Full Name</Form.Label>\n                <InputGroup hasValidation>\n                  <Form.Control\n                    className='bg-body_tertiary border-0 text-blue_secondary rounded'\n                    type='text'\n                    placeholder='Name'\n                    value={name}\n                    required\n                    onChange={(e) => setName(e.target.value)}\n                  ></Form.Control>\n                  <Form.Control.Feedback type='valid'>\n                    Looks good!\n                  </Form.Control.Feedback>\n                  <Form.Control.Feedback type='invalid'>\n                    Please enter a Username\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n\n              <Form.Group className='mb-1' controlId='email'>\n                <Form.Label className='mb-1 form_label'>\n                  Email Adress\n                </Form.Label>\n                <InputGroup hasValidation>\n                  <Form.Control\n                    className='bg-body_tertiary border-0 text-blue_secondary rounded'\n                    type='text'\n                    placeholder='Email Address'\n                    value={email}\n                    required\n                    onChange={(e) => setEmail(e.target.value)}\n                  ></Form.Control>\n                  <Form.Control.Feedback type='valid'>\n                    Looks good!\n                  </Form.Control.Feedback>\n                  <Form.Control.Feedback type='invalid'>\n                    Please enter valid Email\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n\n              <Form.Group className='mb-1' controlId='password'>\n                <Form.Label className='form_label mb-1'>Password</Form.Label>\n                <InputGroup hasValidation>\n                  <Form.Control\n                    className='bg-body_tertiary border-0 text-blue_secondary rounded'\n                    type='password'\n                    placeholder='New Password'\n                    value={password}\n                    required\n                    onChange={(e) => setPassword(e.target.value)}\n                  ></Form.Control>\n                  <Form.Control.Feedback type='valid'>\n                    Looks good!\n                  </Form.Control.Feedback>\n                  <Form.Control.Feedback type='invalid'>\n                    Please enter a Password\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n\n              <Form.Group controlId='Birthdate'>\n                <Form.Label className='form_label mb-1'>Birthdate</Form.Label>\n                <InputGroup hasValidation>\n                  <Form.Control\n                    className='bg-body_tertiary border-0 text-blue_secondary rounded'\n                    type='date'\n                    placeholder='Birthdate'\n                    value={date}\n                    required\n                    onChange={(e) => setDate(e.target.value)}\n                  ></Form.Control>\n                  <Form.Control.Feedback type='valid'>\n                    Looks good!\n                  </Form.Control.Feedback>\n                  <Form.Control.Feedback type='invalid'>\n                    Please enter a Birthdate\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n\n              <Button\n                className='text-white'\n                type='submit'\n                variant='primary'\n                block\n              >\n                Sign Up\n              </Button>\n            </Form>\n            <p className='text-0 mt-1'>\n              By clicking Sign Up, you accept our{' '}\n              <Link to={'/forgotpassword'}>Privacy Policy </Link> and{' '}\n              <Link>Terms of Service.</Link>\n            </p>\n\n            <hr className='bg-blue_secondary border-bottom-2' />\n            <Row>\n              <Col>\n                <LinkContainer to='/login'>\n                  <Button\n                    className='text-white'\n                    type='submit'\n                    variant='blue_primary'\n                    block\n                  >\n                    Sign In\n                  </Button>\n                </LinkContainer>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Footer />\n    </>\n  )\n}\n\nexport default RegisterScreen\n","import React, { useEffect } from 'react'\nimport { Card } from 'react-bootstrap'\nimport { useDispatch } from 'react-redux'\n\nimport { Link } from 'react-router-dom'\nimport { logout } from '../actions/authActions'\nimport Footer from '../components/Footer'\nimport Meta from '../components/Meta'\n\nconst VerifyScreen = ({ location, history }) => {\n  const dispatch = useDispatch()\n  const query = location.search\n\n  useEffect(() => {\n    if (query && query.toString() === '?verified') {\n      dispatch(logout())\n    }\n    if (!query) {\n      history.push('/')\n    }\n  }, [dispatch, query, history])\n\n  return (\n    <>\n      <Meta title='Verify - Linkdev' />\n      {query && query.toString() === '?verified' ? (\n        <div\n          className='d-flex align-items-center justify-content-center'\n          style={{ minHeight: '90vh' }}\n        >\n          <Card className='rounded-lg col-md-4 text-center p-5'>\n            <Card.Title className=' text-3 text-primary'>\n              Your Account Has Been Verified\n            </Card.Title>\n\n            <i\n              className='fal fa-check-circle text-primary my-4'\n              style={{ fontSize: '10rem' }}\n            ></i>\n            <Card.Body>\n              <p className='text-2'>\n                We have Succesfully verified your account. Now you are the\n                creator of our community and post your posts.\n              </p>\n            </Card.Body>\n\n            <Link to='/' className='btn btn-primary btn-lg text-white'>\n              Continue\n            </Link>\n          </Card>\n        </div>\n      ) : (\n        query &&\n        query.toString() === '?notverified' && (\n          <div\n            className='d-flex align-items-center justify-content-center'\n            style={{ minHeight: '90vh' }}\n          >\n            <Card className='rounded-lg col-md-4 text-center p-5'>\n              <Card.Title className=' text-3 text-danger'>\n                Account Verification Failed\n              </Card.Title>\n\n              <i\n                className='fal fa-times-circle text-danger my-4'\n                style={{ fontSize: '10rem' }}\n              ></i>\n              <Card.Body>\n                <p className='text-2'>\n                  We couldn't Verify your account. There was some error in the\n                  process. Please contact{' '}\n                  <span class='text-danger'>Sabin Subedi</span> From the link\n                  below.\n                </p>\n              </Card.Body>\n\n              <a\n                href='https://www.messenger.com/t/100003158884234'\n                className='btn btn-danger btn-lg text-white'\n              >\n                Contact Us\n              </a>\n            </Card>\n          </div>\n        )\n      )}\n      <Footer />\n    </>\n  )\n}\n\nexport default VerifyScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Row, Col, Container, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { forgotEmail } from '../actions/authActions'\nimport Footer from '../components/Footer'\nimport Message from '../components/Message'\n\nconst ForgotPasswordScreen = () => {\n  const [email, setEmail] = useState('')\n\n  const dispatch = useDispatch()\n\n  const forgetEmail = useSelector((state) => state.forgetEmail)\n  const { error, success } = forgetEmail\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    dispatch(forgotEmail(email))\n  }\n\n  return (\n    <>\n      <Container>\n        <Row className='login_mainContent align-items-center justify-content-between'>\n          <Col md={5}>\n            <Image src='./logo.svg' fluid='true' />\n            <p className='my-2 text_desc'>\n              Connect with developers all around the world on Linkdev\n            </p>\n          </Col>\n          <Col md={5} className='bg-body_secondary p-5 rounded-lg'>\n            <h1>Forgot Password</h1>\n            <p className='text-secondary text-0'>\n              Please enter your registered email address. An email notification\n              with a password reset link will then be sent to you.\n            </p>\n            {success && (\n              <Message variant='success'>\n                Password Reset Link Sent To Your Email.\n              </Message>\n            )}\n            {error && <Message>{error}</Message>}\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId='email'>\n                <Form.Control\n                  className='bg-body_tertiary border-0 text-blue_secondary'\n                  size='lg'\n                  type='email'\n                  placeholder='Email Address'\n                  value={email}\n                  required\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Button\n                className='text-white'\n                type='submit'\n                variant='primary'\n                size='lg'\n                block\n              >\n                Request Password Reset\n              </Button>\n            </Form>\n\n            <hr className='bg-blue_secondary border-bottom-2 mb-2 mt-4' />\n\n            <p className='d-block text-primary text-center my-0'>\n              Remember Password ?\n            </p>\n            <Row className='py-3'>\n              <Col>\n                <LinkContainer to='/login'>\n                  <Button\n                    className='text-white'\n                    type='submit'\n                    variant='blue_primary'\n                    size='lg'\n                    block\n                  >\n                    Login\n                  </Button>\n                </LinkContainer>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Footer />\n    </>\n  )\n}\n\nexport default ForgotPasswordScreen\n","export const PROFILE_REQUEST = 'PROFILE_REQUEST'\nexport const PROFILE_SUCCESS = 'PROFILE_SUCCESS'\nexport const PROFILE_FAIL = 'PROFILE_FAIL'\n\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST'\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS'\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL'\n\nexport const UPDATE_PROFILE_AVATAR_REQUEST = 'UPDATE_PROFILE_AVATAR_REQUEST'\nexport const UPDATE_PROFILE_AVATAR_SUCCESS = 'UPDATE_PROFILE_AVATAR_SUCCESS'\nexport const UPDATE_PROFILE_AVATAR_FAIL = 'UPDATE_PROFILE_AVATAR_FAIL'\n","import { useState } from 'react'\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap'\nimport 'emoji-mart/css/emoji-mart.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProfile } from '../actions/profileActions'\n\nfunction Profile(props) {\n  const dispatch = useDispatch()\n\n  const userProfile = useSelector((state) => state.userProfile)\n  const { profile } = userProfile\n\n  const [bio, setBio] = useState(profile.bio)\n  const [location, setLocation] = useState(profile.location)\n  const [facebook, setFacebook] = useState(profile.facebook)\n  const [twitter, setTwitter] = useState(profile.twitter)\n  const [github, setGithub] = useState(profile.github)\n  const [website, setWebsite] = useState(profile.website)\n  const [linkedin, setLinkedin] = useState(profile.linkedin)\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    dispatch(\n      updateProfile(bio, facebook, twitter, linkedin, github, website, location)\n    )\n\n    props.onHide()\n  }\n\n  return (\n    <Modal\n      {...props}\n      size='lg'\n      aria-labelledby='contained-modal-title-vcenter'\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id='contained-modal-title-vcenter'>\n          Edit Your Profile\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='email'>\n            <Form.Label className='form_label text-2'>Bio</Form.Label>\n            <Form.Control\n              className='bg-body_tertiary border-0 text-color_primary font-weight-light'\n              size='lg'\n              as='textarea'\n              rows={4}\n              placeholder='Add a Bio'\n              value={bio ? bio : ''}\n              onChange={(e) => setBio(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='location' as={Row}>\n            <Form.Label column sm='2' className='form_label text-2 pr-0 '>\n              <i className='fal fa-map-marker-alt mr-2'></i> Location\n            </Form.Label>\n            <Col className='pl-0' sm={10}>\n              <Form.Control\n                className='bg-body_tertiary border-0 ml-0 text-color_primary font-weight-light'\n                size='lg'\n                type='text'\n                placeholder='Location'\n                value={location ? location : ''}\n                onChange={(e) => setLocation(e.target.value)}\n              ></Form.Control>\n            </Col>\n          </Form.Group>\n\n          <Form.Group controlId='website' as={Row}>\n            <Form.Label column sm='2' className='form_label text-2 pr-0 '>\n              <i className='fal fa-link mr-2'></i> Website\n            </Form.Label>\n            <Col className='pl-0' sm={10}>\n              <Form.Control\n                className='bg-body_tertiary border-0 ml-0 text-color_primary font-weight-light'\n                size='lg'\n                type='text'\n                placeholder='Website'\n                value={website ? website : ''}\n                onChange={(e) => setWebsite(e.target.value)}\n              ></Form.Control>\n            </Col>\n          </Form.Group>\n\n          <Form.Group controlId='twitter' as={Row}>\n            <Form.Label column sm='2' className='form_label text-2 pr-0 '>\n              <i className='fab fa-twitter mr-2'></i> Twitter\n            </Form.Label>\n            <Col className='pl-0' sm={10}>\n              <Form.Control\n                className='bg-body_tertiary border-0 ml-0 text-color_primary font-weight-light'\n                size='lg'\n                type='text'\n                placeholder='Your Twitter Profile URL'\n                value={twitter ? twitter : ''}\n                onChange={(e) => setTwitter(e.target.value)}\n              ></Form.Control>\n            </Col>\n          </Form.Group>\n\n          <Form.Group controlId='github' as={Row}>\n            <Form.Label column sm='2' className='form_label text-2 pr-0 '>\n              <i className='fab fa-github mr-2'></i> Github\n            </Form.Label>\n            <Col className='pl-0' sm={10}>\n              <Form.Control\n                className='bg-body_tertiary border-0 ml-0 text-color_primary font-weight-light'\n                size='lg'\n                type='text'\n                placeholder='Your Github Profile URL'\n                value={github ? github : ''}\n                onChange={(e) => setGithub(e.target.value)}\n              ></Form.Control>\n            </Col>\n          </Form.Group>\n\n          <Form.Group controlId='facebook' as={Row}>\n            <Form.Label column sm='2' className='form_label text-2 pr-0 '>\n              <i className='fab fa-facebook mr-2'></i> Facebook\n            </Form.Label>\n            <Col className='pl-0' sm={10}>\n              <Form.Control\n                className='bg-body_tertiary border-0 ml-0 text-color_primary font-weight-light'\n                size='lg'\n                type='text'\n                placeholder='Your Facebook Profile URL'\n                value={facebook ? facebook : ''}\n                onChange={(e) => setFacebook(e.target.value)}\n              ></Form.Control>\n            </Col>\n          </Form.Group>\n\n          <Form.Group controlId='linkedin' as={Row}>\n            <Form.Label column sm='2' className='form_label text-2 pr-0 '>\n              <i className='fab fa-linkedin mr-2'></i> Linkedin\n            </Form.Label>\n            <Col className='pl-0' sm={10}>\n              <Form.Control\n                className='bg-body_tertiary border-0 ml-0 text-color_primary font-weight-light'\n                size='lg'\n                type='text'\n                placeholder='Your Linkedin Profile URL'\n                value={linkedin ? linkedin : ''}\n                onChange={(e) => setLinkedin(e.target.value)}\n              ></Form.Control>\n            </Col>\n          </Form.Group>\n          <Button\n            type='submit'\n            variant='primary'\n            size='lg'\n            className='mt-2 '\n            block\n            disabled={\n              !bio &&\n              !location &&\n              !facebook &&\n              !twitter &&\n              !github &&\n              !website &&\n              !linkedin\n            }\n          >\n            Update Profile\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default Profile\n","import {\n  PROFILE_FAIL,\n  PROFILE_REQUEST,\n  PROFILE_SUCCESS,\n  UPDATE_PROFILE_AVATAR_FAIL,\n  UPDATE_PROFILE_AVATAR_REQUEST,\n  UPDATE_PROFILE_AVATAR_SUCCESS,\n  UPDATE_PROFILE_FAIL,\n  UPDATE_PROFILE_REQUEST,\n  UPDATE_PROFILE_SUCCESS,\n} from '../constants/profileConstants'\nimport axios from 'axios'\n\nexport const getProfileDetail = (userId) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PROFILE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/v1/profile/${userId}`, config)\n\n    dispatch({ type: PROFILE_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const updateProfile =\n  (bio, facebook, twitter, linkedin, github, website, location) =>\n  async (dispatch, getState) => {\n    try {\n      dispatch({ type: UPDATE_PROFILE_REQUEST })\n\n      const {\n        userLogin: { userInfo },\n      } = getState()\n\n      const config = {\n        headers: {\n          'Cotent-Type': 'application/json',\n          authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n\n      const { data } = await axios.put(\n        `/v1/profile`,\n        { bio, facebook, twitter, linkedin, github, website, location },\n        config\n      )\n\n      dispatch({ type: UPDATE_PROFILE_SUCCESS, payload: data })\n    } catch (error) {\n      dispatch({\n        type: UPDATE_PROFILE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      })\n    }\n  }\n\nexport const updateProfileAvatar = (avatar) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: UPDATE_PROFILE_AVATAR_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Cotent-Type': 'application/json',\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/v1/profile/avatar`, { avatar }, config)\n\n    dispatch({\n      type: UPDATE_PROFILE_AVATAR_SUCCESS,\n      profile: data.profile,\n      post: data.post,\n    })\n\n    dispatch({\n      type: 'USER_AVATAR',\n      avatar: data.avatar,\n    })\n\n    // Get the existing data\n    var existing = localStorage.getItem('userInfo')\n\n    existing = existing ? JSON.parse(existing) : {}\n\n    // Add new data to localStorage Array\n    existing.avatar = data.avatar\n\n    // Save back to localStorage\n    localStorage.setItem('userInfo', JSON.stringify(existing))\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PROFILE_AVATAR_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import { useState } from 'react'\nimport { Button, Form, Image, Modal } from 'react-bootstrap'\nimport 'emoji-mart/css/emoji-mart.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { updateProfileAvatar } from '../actions/profileActions'\nimport Loader from './Loader'\n\nfunction ProfileAvatarModal(props) {\n  const dispatch = useDispatch()\n\n  //eslint-disable-next-line\n  const [uploading, setUploading] = useState(false)\n\n  const userProfile = useSelector((state) => state.userProfile)\n  const { profile } = userProfile\n\n  const [avatar, setAvatar] = useState('')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    dispatch(updateProfileAvatar(avatar))\n\n    props.onHide()\n  }\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setAvatar('')\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/v1/upload', formData, config)\n\n      setAvatar(data.imagePath)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  return (\n    <Modal\n      {...props}\n      size='lg'\n      aria-labelledby='contained-modal-title-vcenter'\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id='contained-modal-title-vcenter'>\n          Edit Your Profile Picture\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {uploading && (\n          <>\n            <Loader />{' '}\n            <h4 className='text-primary text-center mt-5'>\n              Uploading Your Image....\n            </h4>\n          </>\n        )}\n        <Image\n          src={avatar ? avatar : profile && profile.user && profile.user.avatar}\n          fluid\n        />\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='email'>\n            <Form.File\n              className='border-0 text-color_primary font-weight-light'\n              label='Upload Your Profile Picture'\n              required\n              onChange={uploadFileHandler}\n            ></Form.File>\n          </Form.Group>\n\n          <Button\n            type='submit'\n            variant='primary'\n            size='lg'\n            className='mt-2 '\n            block\n          >\n            Update Profile\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default ProfileAvatarModal\n","import React, { useEffect, useState } from 'react'\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap'\nimport Header from '../components/Header'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Footer from '../components/Footer'\nimport { getUserPosts } from '../actions/postActions'\nimport Post from '../components/Post'\nimport Loader from '../components/Loader'\nimport { getProfileDetail } from '../actions/profileActions'\nimport ProfileModal from '../components/ProfileModal'\nimport ProfileAvatarModal from '../components/ProfileAvatarModal'\nimport Meta from '../components/Meta'\nimport Message from '../components/Message'\n\nconst ProfileScreen = ({ history, match }) => {\n  const userId = match.params.id\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const [modalShow, setModalShow] = useState(false)\n  const [AvatarModalShow, setAvatarModalShow] = useState(false)\n\n  const userPostList = useSelector((state) => state.userPostList)\n  const { posts, loading, error } = userPostList\n\n  const userProfile = useSelector((state) => state.userProfile)\n  const { profile, loading: loadingUser } = userProfile\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n    dispatch(getProfileDetail(userId))\n\n    dispatch(getUserPosts(userId))\n  }, [history, userInfo, dispatch, userId])\n\n  const clickHandler = () => {\n    setModalShow(true)\n  }\n\n  return (\n    <>\n      <Meta\n        title={`${\n          profile && profile.user && profile.user.name\n            ? profile.user.name + ' -'\n            : ''\n        } Linkdev`}\n      />\n      <Header history={history} user={userInfo} />\n      {loading && loadingUser ? (\n        <Loader />\n      ) : (\n        <>\n          <section className='profile_body'>\n            <Container>\n              <Row className='my-4'>\n                <Col md={5}>\n                  <Card className='p-4 rounded-lg'>\n                    <div className='card_image position-relative d-flex justify-content-center'>\n                      <Card.Img\n                        src={profile && profile.user && profile.user.avatar}\n                        fluid\n                        className='rounded-circle '\n                        style={{ width: '70%' }}\n                      />\n                      {userInfo &&\n                        profile &&\n                        profile.user &&\n                        userInfo.id === profile.user._id && (\n                          <>\n                            <ProfileAvatarModal\n                              show={AvatarModalShow}\n                              onHide={() => setAvatarModalShow(false)}\n                            />\n                            <div\n                              onClick={() => setAvatarModalShow(true)}\n                              className='image_icon icon'\n                            >\n                              <i className='fas fa-camera'></i>\n                            </div>\n                          </>\n                        )}\n                    </div>\n\n                    <Card.Body className='text-left'>\n                      <h1 className='text-5 font-weight-regular mb-0 name'>\n                        {profile && profile.user && profile.user.name}\n                      </h1>\n                      <h2 className='text-3 text-color_secondary font-weight-light'>\n                        {profile && profile.user && profile.user.isVerified\n                          ? 'Creator'\n                          : 'Viewer'}\n                      </h2>\n                      {profile && profile.bio && (\n                        <p className='user_bio'>{profile && profile.bio}</p>\n                      )}\n                      {profile && profile.location && (\n                        <p className='text-1 mb-1'>\n                          <i className='fal fa-location text-color_secondary icon mr-2'></i>\n                          {profile && profile.location}\n                        </p>\n                      )}\n\n                      {profile && profile.website && (\n                        <a\n                          rel='noreferrer'\n                          target='_blank'\n                          href={`https://${\n                            profile.website.startsWith('https://')\n                              ? profile.website.split('//')[1]\n                              : profile.website\n                          }`}\n                        >\n                          <p className='text-1 mb-1'>\n                            <i className='fal fa-link text-color_secondary  mr-2'></i>\n                            {profile && profile.website.startsWith('https://')\n                              ? profile.website.split('/')[\n                                  profile.website.split('/').length - 1\n                                ]\n                              : profile.website}\n                          </p>\n                        </a>\n                      )}\n\n                      {profile && profile.facebook && (\n                        <a\n                          rel='noreferrer'\n                          target='_blank'\n                          href={`https://${\n                            profile.facebook.startsWith('https://')\n                              ? profile.facebook.split('//')[1]\n                              : profile.facebook\n                          }`}\n                        >\n                          <p className='text-1 mb-1'>\n                            <i className='fab fa-facebook text-color_secondary  mr-2'></i>\n                            {profile && profile.facebook.startsWith('https://')\n                              ? profile.facebook.split('/')[\n                                  profile.facebook.split('/').length - 1\n                                ]\n                              : profile.facebook}\n                          </p>\n                        </a>\n                      )}\n                      {profile && profile.instagram && (\n                        <a\n                          rel='noreferrer'\n                          target='_blank'\n                          href={`https://${\n                            profile.instagram.startsWith('https://')\n                              ? profile.instagram.split('//')[1]\n                              : profile.instagram\n                          }`}\n                        >\n                          <p className='text-1 mb-1'>\n                            <i className='fab fa-instagram text-color_secondary  mr-2'></i>\n                            {profile && profile.instagram.startsWith('https://')\n                              ? profile.instagram.split('/')[\n                                  profile.instagram.split('/').length - 1\n                                ]\n                              : profile.instagram}\n                          </p>\n                        </a>\n                      )}\n                      {profile && profile.github && (\n                        <a\n                          rel='noreferrer'\n                          target='_blank'\n                          href={`https://${\n                            profile.github.startsWith('https://')\n                              ? profile.github.split('//')[1]\n                              : profile.github\n                          }`}\n                        >\n                          <p className='text-1 mb-1'>\n                            <i className='fab fa-github text-color_secondary  mr-2'></i>\n                            {profile && profile.github.startsWith('https://')\n                              ? profile.github.split('/')[\n                                  profile.github.split('/').length - 1\n                                ]\n                              : profile.github}\n                          </p>\n                        </a>\n                      )}\n                      {profile && profile.twitter && (\n                        <a\n                          rel='noreferrer'\n                          target='_blank'\n                          href={`https://${\n                            profile.twitter.startsWith('https://')\n                              ? profile.twitter.split('//')[1]\n                              : profile.twitter\n                          }`}\n                        >\n                          <p className='text-1 mb-1'>\n                            <i className='fab fa-twitter text-color_secondary  mr-2'></i>\n                            {profile && profile.twitter.startsWith('https://')\n                              ? profile.twitter.split('/')[\n                                  profile.twitter.split('/').length - 1\n                                ]\n                              : profile.twitter}\n                          </p>\n                        </a>\n                      )}\n\n                      {profile && profile.linkedin && (\n                        <a\n                          rel='noreferrer'\n                          target='_blank'\n                          href={`https://${\n                            profile.linkedin.startsWith('https://')\n                              ? profile.linkedin.split('//')[1]\n                              : profile.linkedin\n                          }`}\n                        >\n                          <p className='text-1 mb-1'>\n                            <i className='fab fa-linkedin text-color_secondary  mr-2'></i>\n                            {(profile &&\n                              profile.linkedin.startsWith('https://')) ||\n                            profile.linkedin.startsWith('http://')\n                              ? profile.linkedin.split('/')[\n                                  profile.linkedin.split('/').length - 1\n                                ]\n                              : profile.linkedin}\n                          </p>\n                        </a>\n                      )}\n                      {userInfo &&\n                        profile &&\n                        profile.user &&\n                        userInfo &&\n                        userInfo.id &&\n                        profile.user._id.toString() ===\n                          userInfo.id.toString() && (\n                          <Button\n                            variant='outline-primary mt-4'\n                            onClick={clickHandler}\n                            block\n                          >\n                            Edit Profile\n                          </Button>\n                        )}\n                    </Card.Body>\n                  </Card>\n                </Col>\n                <Col md={7}>\n                  <h2>Your Posts</h2>\n\n                  {error ? (\n                    <Message>{error}</Message>\n                  ) : loading ? (\n                    <Loader />\n                  ) : (\n                    posts.map((post) => (\n                      <Post\n                        key={post._id}\n                        post={post}\n                        comment1={post.comments[post.comments.length - 2]}\n                        comment2={post.comments[post.comments.length - 1]}\n                      />\n                    ))\n                  )}\n                </Col>\n              </Row>\n              {profile && (\n                <>\n                  <ProfileModal\n                    show={modalShow}\n                    onHide={() => setModalShow(false)}\n                  />\n                </>\n              )}\n            </Container>\n          </section>\n\n          <Footer background='bg-body_secondary' />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProfileScreen\n","import React, { useEffect } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getPostById } from '../actions/postActions'\nimport Header from '../components/Header'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Meta from '../components/Meta'\nimport Post from '../components/Post'\n\nconst PostScreen = ({ history, match }) => {\n  const postId = match.params.id\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const postById = useSelector((state) => state.postById)\n  const { loading, post, error } = postById\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n\n    dispatch(getPostById(postId))\n  }, [history, userInfo, dispatch, postId])\n\n  return (\n    <>\n      <Meta title={`${post ? post.name : ''} - Post`} />\n      <Header history={history} user={userInfo} />\n      <Row className='justify-content-between'>\n        <Col md={3}></Col>\n        <Col md={6}>\n          {loading ? (\n            <Loader />\n          ) : error ? (\n            <Message>{error}</Message>\n          ) : (\n            post && <Post post={post} postScreen={true} history={history} />\n          )}\n        </Col>\n        <Col md={3}></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PostScreen\n","import React from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport Footer from '../components/Footer'\nimport Header from '../components/Header'\nimport Loader from '../components/Loader'\n\nfunction FeedbackScreen({ history }) {\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  return (\n    <>\n      <Header history={history} user={userInfo} />\n      <Row>\n        <Col md={3}></Col>\n        <Col md={6} className='mt-2 bg-body_secondary rounded-lg p-4 my-5'>\n          <iframe\n            title='FeedbackForm'\n            src='https://docs.google.com/forms/d/e/1FAIpQLSdhYJbAnYgT7OifGiDyFnproSkOVNNlBhDyPGGNc5bd7fYVpg/viewform?embedded=true'\n            width='100%'\n            height='2300'\n            frameborder='0'\n            marginheight='0'\n            marginwidth='0'\n          >\n            <Loader />\n          </iframe>\n        </Col>\n        <Col md={3}></Col>\n      </Row>\n      <Footer background='bg-body_secondary' />\n    </>\n  )\n}\n\nexport default FeedbackScreen\n","import React, { useEffect, useState } from 'react'\nimport { Button, Card, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { resetPassword, verifyForgetToken } from '../actions/authActions'\nimport Footer from '../components/Footer'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nfunction ResetPasswordScreen({ match, history }) {\n  const token = match.params.token\n\n  const dispatch = useDispatch()\n\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n  const [passwordError, setPasswordError] = useState('')\n\n  const tokenVerify = useSelector((state) => state.tokenVerify)\n  const { loading, success, error } = tokenVerify\n\n  const {\n    loading: resetLoad,\n    success: resetSuccess,\n    error: resetError,\n  } = useSelector((state) => state.resetPassword)\n\n  useEffect(() => {\n    dispatch(verifyForgetToken(token))\n\n    if (resetSuccess) {\n      history.push('/login?passwordChanged')\n    }\n  }, [dispatch, token, resetSuccess, history])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password.toString() === confirmPassword.toString()) {\n      dispatch(resetPassword(token, password))\n    } else {\n      setPasswordError(\n        `Your Password and Confirm Password didn't matched. Try Again`\n      )\n    }\n  }\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : success ? (\n        <>\n          <div\n            className='d-flex align-items-center justify-content-center'\n            style={{ minHeight: '90vh' }}\n          >\n            <Card className='rounded-lg col-md-4 text-center p-4'>\n              <Card.Title className=' text-3 text-primary'>\n                Reset Your Account Password\n              </Card.Title>\n              <i\n                className='fal fa-fingerprint text-primary my-4'\n                style={{ fontSize: '5rem' }}\n              ></i>\n              <Card.Body>\n                {passwordError && <Message>{passwordError}</Message>}\n                {resetError && <Message>{resetError}</Message>}\n                <Form onSubmit={submitHandler}>\n                  <Form.Group controlId='password'>\n                    <Form.Control\n                      className='bg-body_tertiary border-0 text-blue_secondary'\n                      size='lg'\n                      type='password'\n                      placeholder='Enter Your New Password'\n                      value={password}\n                      required\n                      onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group controlId='confirmPassword'>\n                    <Form.Control\n                      className='bg-body_tertiary border-0 text-blue_secondary'\n                      size='lg'\n                      type='password'\n                      placeholder='Re-Enter Your New Password'\n                      value={confirmPassword}\n                      required\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Button\n                    className='text-white'\n                    type='submit'\n                    variant='primary'\n                    size='lg'\n                    block\n                  >\n                    {resetLoad\n                      ? 'Resetting Your Password....'\n                      : 'Reset Password'}\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </div>\n          <Footer />\n        </>\n      ) : (\n        error && (\n          <div\n            className='d-flex align-items-center justify-content-center'\n            style={{ minHeight: '90vh' }}\n          >\n            <Card className='rounded-lg col-md-4 text-center p-5'>\n              <Card.Title className=' text-3 text-danger'>\n                Reset Password Failed\n              </Card.Title>\n\n              <i\n                className='fal fa-exclamation-triangle text-danger my-4'\n                style={{ fontSize: '10rem' }}\n              ></i>\n              <Card.Body>\n                <p className='text-2'>\n                  There was some error while sending you a reset link. Click the\n                  button below to get the reset link again.\n                </p>\n              </Card.Body>\n\n              <Link\n                to='/forgotpassword'\n                className='btn btn-danger btn-lg text-white'\n              >\n                Get the Reset Link Again\n              </Link>\n            </Card>\n          </div>\n        )\n      )}\n    </>\n  )\n}\n\nexport default ResetPasswordScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport HomeScreen from './screens/HomeScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport VerifyScreen from './screens/VerifyScreen'\nimport ForgotPasswordScreen from './screens/ForgotPasswordScreen'\nimport 'emoji-mart/css/emoji-mart.css'\nimport ProfileScreen from './screens/ProfileScreen'\nimport PostScreen from './screens/PostScreen'\nimport FeedbackScreen from './screens/FeedbackScreen'\nimport ResetPasswordScreen from './screens/ResetPasswordScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <main>\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/forgotpassword' component={ForgotPasswordScreen} />\n        <Route path='/profile/:id' component={ProfileScreen} />\n        <Route path='/verify/:token' component={VerifyScreen} />\n        <Route path='/post/:id' component={PostScreen} />\n        <Route path='/verified' component={VerifyScreen} />\n        <Route path='/resetPassword/:token' component={ResetPasswordScreen} />\n        <Route path='/feedback' component={FeedbackScreen} exact />\n        <Route path='/' component={HomeScreen} exact />\n      </main>\n    </Router>\n  )\n}\n\nexport default App\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  forgetEmailReducer,\n  resetPasswordReducer,\n  tokenVerifyReducer,\n  userLoginReducer,\n  verifyEmailReducer,\n} from './reducers/authReducers'\nimport {\n  userAvatarReducer,\n  userProfileReducer,\n} from './reducers/profileReducers'\n\nimport { userListReducer } from './reducers/userReducer'\n\nimport {\n  commentStatusReducer,\n  deletedPostReducer,\n  postByIdReducer,\n  postCreateReducer,\n  postListReducer,\n  userPostListReducer,\n} from './reducers/postReducers'\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  postList: postListReducer,\n  postCreate: postCreateReducer,\n  verifyEmail: verifyEmailReducer,\n  userPostList: userPostListReducer,\n  userProfile: userProfileReducer,\n  userAvatar: userAvatarReducer,\n  commentStatus: commentStatusReducer,\n  postById: postByIdReducer,\n  deletedPost: deletedPostReducer,\n  userList: userListReducer,\n  forgetEmail: forgetEmailReducer,\n  tokenVerify: tokenVerifyReducer,\n  resetPassword: resetPasswordReducer,\n})\n\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : ''\n\nconst intialState = {\n  userLogin: {\n    userInfo: userInfoFromLocalStorage,\n  },\n}\n\nconst middleware = [thunk]\n\n// console.log(userInfoFromLocalStorage)\n\nconst store = createStore(\n  reducer,\n  intialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PASSWORD_FORGET_FAIL,\n  PASSWORD_FORGET_REQUEST,\n  PASSWORD_FORGET_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  TOKEN_VERIFY_FAIL,\n  TOKEN_VERIFY_REQUEST,\n  TOKEN_VERIFY_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_VERIFY_FAIL,\n  USER_VERIFY_REQUEST,\n  USER_VERIFY_SUCCESS,\n} from '../constants/authConstant'\n\nexport const userLoginReducer = (state = { userInfo: {} }, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const verifyEmailReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_VERIFY_REQUEST:\n      return { loading: true }\n    case USER_VERIFY_SUCCESS:\n      return { loading: false, success: true, message: action.payload }\n    case USER_VERIFY_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const forgetEmailReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PASSWORD_FORGET_REQUEST:\n      return { loading: true }\n    case PASSWORD_FORGET_SUCCESS:\n      return { loading: false, success: true, message: action.payload }\n    case PASSWORD_FORGET_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const tokenVerifyReducer = (state = {}, action) => {\n  switch (action.type) {\n    case TOKEN_VERIFY_REQUEST:\n      return { loading: true }\n    case TOKEN_VERIFY_SUCCESS:\n      return { loading: false, success: true }\n    case TOKEN_VERIFY_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const resetPasswordReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RESET_PASSWORD_REQUEST:\n      return { loading: true }\n    case RESET_PASSWORD_SUCCESS:\n      return { loading: false, success: true }\n    case RESET_PASSWORD_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","import {\n  POST_BY_ID_FAIL,\n  POST_BY_ID_REQUEST,\n  POST_BY_ID_SUCCESS,\n  POST_COMMENT_FAIL,\n  POST_COMMENT_REQUEST,\n  POST_COMMENT_SUCCESS,\n  POST_CREATE_FAIL,\n  POST_CREATE_REQUEST,\n  POST_CREATE_SUCCESS,\n  POST_DELETE_FAIL,\n  POST_DELETE_REQUEST,\n  POST_DELETE_SUCCESS,\n  POST_LIKE_FAIL,\n  POST_LIKE_REQUEST,\n  POST_LIKE_SUCCESS,\n  POST_LIST_FAIL,\n  POST_LIST_REQUEST,\n  POST_LIST_SUCCESS,\n  USER_POST_LIST_FAIL,\n  USER_POST_LIST_REQUEST,\n  USER_POST_LIST_SUCCESS,\n} from '../constants/postConstant'\nimport { UPDATE_PROFILE_AVATAR_SUCCESS } from '../constants/profileConstants'\n\nexport const postListReducer = (state = { posts: [] }, action) => {\n  switch (action.type) {\n    case POST_LIST_REQUEST:\n      return { loading: true, posts: [] }\n    case POST_LIST_SUCCESS:\n      return { loading: false, posts: action.payload }\n    case POST_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case POST_LIKE_REQUEST:\n      return { ...state, likeLoading: true }\n    case POST_LIKE_SUCCESS:\n      return { likeLoading: false, success: true, posts: action.payload }\n    case POST_LIKE_FAIL:\n      return {\n        ...state,\n        likeLoading: false,\n        error: action.payload,\n      }\n    case POST_CREATE_SUCCESS:\n      return { ...state, loading: false, success: true, posts: action.payload }\n    case POST_DELETE_SUCCESS:\n      return { ...state, loading: false, success: true, posts: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userPostListReducer = (state = { posts: [] }, action) => {\n  switch (action.type) {\n    case USER_POST_LIST_REQUEST:\n      return { loading: true, posts: [] }\n    case USER_POST_LIST_SUCCESS:\n      return { loading: false, posts: action.payload }\n    case USER_POST_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case POST_LIKE_REQUEST:\n      return { ...state, likeLoading: true }\n    case POST_LIKE_SUCCESS:\n      return { likeLoading: false, success: true, posts: action.userPostList }\n    case POST_LIKE_FAIL:\n      return {\n        ...state,\n        likeLoading: false,\n        error: action.payload,\n      }\n    case POST_DELETE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n        posts: action.userPosts,\n      }\n    case UPDATE_PROFILE_AVATAR_SUCCESS:\n      return { loading: false, posts: action.post }\n    default:\n      return state\n  }\n}\n\nexport const postCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case POST_CREATE_REQUEST:\n      return { loading: true }\n    case POST_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const commentStatusReducer = (state = {}, action) => {\n  switch (action.type) {\n    case POST_COMMENT_REQUEST:\n      return { loading: true }\n    case POST_COMMENT_SUCCESS:\n      return { loading: false, success: true, status: action.payload }\n    case POST_COMMENT_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const postByIdReducer = (state = {}, action) => {\n  switch (action.type) {\n    case POST_BY_ID_REQUEST:\n      return { loading: true }\n    case POST_BY_ID_SUCCESS:\n      return { loading: false, post: action.payload }\n    case POST_BY_ID_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const deletedPostReducer = (state = {}, action) => {\n  switch (action.type) {\n    case POST_DELETE_REQUEST:\n      return { loading: true }\n    case POST_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case POST_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","import {\n  PROFILE_FAIL,\n  PROFILE_REQUEST,\n  PROFILE_SUCCESS,\n  UPDATE_PROFILE_AVATAR_SUCCESS,\n  UPDATE_PROFILE_FAIL,\n  UPDATE_PROFILE_REQUEST,\n  UPDATE_PROFILE_SUCCESS,\n} from '../constants/profileConstants'\n\nexport const userProfileReducer = (state = { profile: {} }, action) => {\n  switch (action.type) {\n    case PROFILE_REQUEST:\n      return { loading: true }\n    case PROFILE_SUCCESS:\n      return { loading: false, profile: action.payload }\n    case PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case UPDATE_PROFILE_SUCCESS:\n      return { loading: false, profile: action.payload }\n    case UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case UPDATE_PROFILE_AVATAR_SUCCESS:\n      return { loading: false, profile: action.profile }\n    default:\n      return state\n  }\n}\n\nexport const userAvatarReducer = (state = { avatar: {} }, action) => {\n  switch (action.type) {\n    case 'USER_AVATAR':\n      return { avatar: action.avatar }\n    default:\n      return state\n  }\n}\n","import {\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n} from '../constants/userConstants'\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true, users: [] }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './sass/main.css'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}