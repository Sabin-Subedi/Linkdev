{"version":3,"sources":["constants/authConstant.js","actions/authActions.js","constants/postConstant.js","components/Header.js","components/Footer.js","components/Message.js","components/PostModal.js","actions/postActions.js","components/PostCreater.js","components/Date.js","components/Post.js","components/Loader.js","components/PostList.js","screens/HomeScreen.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/VerifyScreen.js","screens/ForgotPasswordScreen.js","screens/ProfileScreen.js","App.js","store.js","reducers/authReducers.js","reducers/postReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_VERIFY_REQUEST","USER_VERIFY_SUCCESS","USER_VERIFY_FAIL","logout","dispatch","a","type","localStorage","removeItem","POST_LIST_REQUEST","POST_LIST_SUCCESS","POST_LIST_FAIL","POST_LIKE_REQUEST","POST_LIKE_SUCCESS","POST_LIKE_FAIL","POST_CREATE_REQUEST","POST_CREATE_SUCCESS","POST_CREATE_FAIL","Header","history","user","useDispatch","Navbar","bg","expand","variant","collapseOnSelect","Container","fluid","to","Brand","Image","className","src","style","width","alt","Toggle","aria-controls","Collapse","id","Nav","Link","avatar","roundedCircle","height","name","NavDropdown","alignRight","Item","onClick","push","Footer","background","Row","Col","md","defaultProps","Message","children","Alert","PostModal","props","useState","setUploading","image","setImage","text","setText","picker","setPicker","userInfo","useSelector","state","userLogin","uploadFileHandler","e","file","target","files","formData","FormData","append","config","headers","axios","post","data","console","log","error","emojiPickerStyle","display","position","zIndex","right","Modal","size","aria-labelledby","centered","closeButton","Title","Body","Badge","Form","onSubmit","preventDefault","getState","posts","postList","authorization","token","postImage","unshift","payload","response","message","createPost","onHide","Group","Control","as","row","placeholder","value","onChange","block","File","label","set","theme","title","exclude","onSelect","emoji","native","Button","disabled","PostCreater","modalShow","setModalShow","Card","show","DateFormat","moment","format","Post","alreadyLiked","likes","find","r","toString","comment","setComment","includes","like","setLike","likeCount","setLikeCount","date","Img","ListGroup","length","comments","postId","_id","get","dataIndex","findIndex","InputGroup","FormControl","required","Loader","Spinner","animation","role","PostList","loading","map","HomeScreen","location","verifiedAlert","setVerifiedAlert","params","pathname","setShow","verifyEmail","useEffect","onClose","dismissible","isVerified","Heading","LoginScreen","email","setEmail","password","setPassword","redirect","search","split","setItem","JSON","stringify","login","controlId","Label","RegisterScreen","setName","setDate","validated","setValidated","event","currentTarget","checkValidity","stopPropagation","register","noValidate","hasValidation","Feedback","VerifyScreen","query","minHeight","fontSize","class","href","ProfileScreen","App","path","component","ForgotPasswordScreen","exact","reducer","combineReducers","action","likeLoading","success","postCreate","sucess","intialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a861f73c.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_VERIFY_REQUEST = 'USER_VERIFY_REQUEST'\r\nexport const USER_VERIFY_SUCCESS = 'USER_VERIFY_SUCCESS'\r\nexport const USER_VERIFY_FAIL = 'USER_VERIFY_FAIL'\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_VERIFY_FAIL,\r\n  USER_VERIFY_REQUEST,\r\n  USER_VERIFY_SUCCESS,\r\n} from '../constants/authConstant'\r\nimport axios from 'axios'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/v1/auth/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const register = (email, password, name, date) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/v1/auth/register',\r\n      { email, password, date, name },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch({ type: USER_LOGOUT })\r\n\r\n  localStorage.removeItem('userInfo')\r\n}\r\n\r\nexport const getEmail = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_VERIFY_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get('/v1/auth/verifyEmail', config)\r\n\r\n    dispatch({\r\n      type: USER_VERIFY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_VERIFY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","export const POST_LIST_REQUEST = 'POST_LIST_REQUEST'\r\nexport const POST_LIST_SUCCESS = 'POST_LIST_SUCCESS'\r\nexport const POST_LIST_FAIL = 'POST_LIST_FAIL'\r\n\r\nexport const POST_LIKE_REQUEST = 'POST_LIKE_REQUEST'\r\nexport const POST_LIKE_SUCCESS = 'POST_LIKE_SUCCESS'\r\nexport const POST_LIKE_FAIL = 'POST_LIKE_FAIL'\r\nexport const POST_LIKE_RESET = 'POST_LIKE_RESET'\r\n\r\nexport const POST_CREATE_REQUEST = 'POST_CREATE_REQUEST'\r\nexport const POST_CREATE_SUCCESS = 'POST_CREATE_SUCCESS'\r\nexport const POST_CREATE_FAIL = 'POST_CREATE_FAIL'\r\n","import React from 'react'\r\nimport { Container, Image, Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/authActions'\r\n\r\nconst Header = ({ history, user }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <Navbar bg='body_primary' expand='lg' variant='dark' collapseOnSelect>\r\n      <Container fluid>\r\n        <LinkContainer to='/'>\r\n          <Navbar.Brand>\r\n            <Image\r\n              className='text-primary text-4 font-weight-bold'\r\n              src='./logo.svg'\r\n              style={{ width: '60%' }}\r\n              alt='Linkdev'\r\n              fluid\r\n            ></Image>\r\n          </Navbar.Brand>\r\n        </LinkContainer>\r\n\r\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n        <Navbar.Collapse id='basic-navbar-nav'>\r\n          <Nav className='ml-auto text-2'>\r\n            <LinkContainer to='/'>\r\n              <Nav.Link className='bg-body_tertiary text-primary p-2 px-3 rounded-lg'>\r\n                <i className='fas fa-home mr-2 '></i>Home\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to={`/profile/${user && user.id}`}>\r\n              <Nav.Link className='d-flex text-1 align-items-center text-color_secondary'>\r\n                <Image\r\n                  src={user && user.avatar}\r\n                  className='mx-2 '\r\n                  fluid\r\n                  roundedCircle\r\n                  style={{\r\n                    height: '30px',\r\n                    width: '30px',\r\n                  }}\r\n                />{' '}\r\n                {user && user.name}\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n            <NavDropdown\r\n              className='bg-body_secondary text-white px-2 rounded-circle text-white'\r\n              id='setting'\r\n              alignRight\r\n            >\r\n              <LinkContainer to={`/profile/${user && user.id}`}>\r\n                <NavDropdown.Item>\r\n                  <i className='fas fa-user mr-2'></i> Profile\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <LinkContainer to='/feedback'>\r\n                <NavDropdown.Item>\r\n                  <i className='fas fa-comment-alt mr-2'></i> Give Feedback\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <LinkContainer to='/bug'>\r\n                <NavDropdown.Item>\r\n                  <i className='fas fa-bug mr-2'></i>Report a Bug\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <LinkContainer to='/bug'>\r\n                <NavDropdown.Item>\r\n                  <i className='fab fa-discord mr-2'></i>Join Discord\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <NavDropdown.Item onClick={logoutHandler}>\r\n                <i className='fas fa-sign-out-alt mr-2'></i>Logout\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nconst Footer = ({ background }) => {\r\n  return (\r\n    <footer className={background}>\r\n      <Container>\r\n        <Row className='footer align-items-center justify-content-between'>\r\n          <Col md={6}>\r\n            <span>Copyright &copy;linkdev </span>\r\n            <span>v1.0</span>\r\n          </Col>\r\n          <Col\r\n            md={6}\r\n            className='ml-auto text-right d-flex flex-wrap align-items-center justify-content-end'\r\n          >\r\n            <LinkContainer to='/privacy' className='mx-2'>\r\n              <span className='mx-1'>Privacy & Policy</span>\r\n            </LinkContainer>\r\n            <LinkContainer to='/privacy'>\r\n              <span className='mx-1'>Report a Bug</span>\r\n            </LinkContainer>\r\n            <LinkContainer to='/privacy'>\r\n              <i className='icon fab fa-github mx-2'></i>\r\n            </LinkContainer>\r\n            <LinkContainer to='/privacy'>\r\n              <i className='icon fab fa-discord mx-2'></i>\r\n            </LinkContainer>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nFooter.defaultProps = {\r\n  background: 'bg_body_primary',\r\n}\r\n\r\nexport default Footer\r\n","import { Alert } from 'react-bootstrap'\r\nimport React from 'react'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return (\r\n    <Alert className='mt-4' variant={variant}>\r\n      {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'danger',\r\n  children: 'danger',\r\n}\r\n\r\nexport default Message\r\n","import { useState } from 'react'\r\nimport { Badge, Button, Col, Form, Image, Modal, Row } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { Picker } from 'emoji-mart'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createPost } from '../actions/postActions'\r\n\r\nfunction PostModal(props) {\r\n  const dispatch = useDispatch()\r\n\r\n  //eslint-disable-next-line\r\n  const [uploading, setUploading] = useState(false)\r\n  const [image, setImage] = useState(``)\r\n  const [text, setText] = useState(``)\r\n  const [picker, setPicker] = useState(false)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/v1/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n      console.log(data)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const emojiPickerStyle = {\r\n    display: picker ? 'block' : 'none',\r\n    position: 'absolute',\r\n    zIndex: '100',\r\n    right: '0',\r\n    height: ' 20rem',\r\n    width: '20rem',\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(createPost(text, image))\r\n\r\n    props.onHide()\r\n    setText('')\r\n    setImage('')\r\n    setPicker(false)\r\n  }\r\n\r\n  const emojiOpener = () => {\r\n    setPicker(!picker)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size='lg'\r\n      aria-labelledby='contained-modal-title-vcenter'\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id='contained-modal-title-vcenter text-center'>\r\n          Create Post\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Row className='align-items-center justify-content-between'>\r\n          <Col className='d-flex align-items-center'>\r\n            <Image\r\n              src={userInfo && userInfo.avatar}\r\n              style={{ width: '50px', height: '50px' }}\r\n              fluid='true'\r\n              roundedCircle\r\n            />\r\n            <div className='ml-3'>\r\n              <h6 className='text-2 text-primary mb-0'>\r\n                {userInfo && userInfo.name}\r\n              </h6>\r\n              <Badge variant='blue_primary'>User</Badge>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Form onSubmit={submitHandler} className='mt-2'>\r\n          <Form.Group className='text'>\r\n            <Form.Control\r\n              className='create_input bg-body_secondary border-0 text-blue_secondary'\r\n              as='textarea'\r\n              row={50}\r\n              size='lg'\r\n              placeholder={`What's on your mind, ${userInfo && userInfo.name}`}\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n            ></Form.Control>\r\n\r\n            {image && <Image src={image} fluid block />}\r\n          </Form.Group>\r\n\r\n          <Form.Group className='file'>\r\n            <Row className='align-items-center pr-5 postion-relative'>\r\n              <Col md={6}>\r\n                <Form.File\r\n                  id='image-file'\r\n                  className='bg-body_secondary d-inline-block'\r\n                  label='Insert Image'\r\n                  onChange={uploadFileHandler}\r\n                ></Form.File>\r\n              </Col>\r\n\r\n              <div className='emoji_picker ml-auto  postion-relative'>\r\n                <i\r\n                  onClick={emojiOpener}\r\n                  className='text-primary icon fal fa-smile-beam'\r\n                ></i>\r\n                <Picker\r\n                  set='google'\r\n                  theme='dark'\r\n                  title='Pick Your Emoji'\r\n                  exclude={['flags']}\r\n                  style={emojiPickerStyle}\r\n                  onSelect={(emoji) => setText(text + emoji.native)}\r\n                />\r\n              </div>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Button\r\n            type='submit'\r\n            variant='primary'\r\n            block\r\n            disabled={!image && !text}\r\n          >\r\n            Post\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default PostModal\r\n","import axios from 'axios'\r\nimport {\r\n  POST_CREATE_FAIL,\r\n  POST_CREATE_REQUEST,\r\n  POST_CREATE_SUCCESS,\r\n  POST_LIKE_FAIL,\r\n  POST_LIKE_REQUEST,\r\n  POST_LIKE_SUCCESS,\r\n  POST_LIST_FAIL,\r\n  POST_LIST_REQUEST,\r\n  POST_LIST_SUCCESS,\r\n} from '../constants/postConstant'\r\n\r\nexport const getPosts = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: POST_LIST_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get('/v1/posts', config)\r\n\r\n    dispatch({\r\n      type: POST_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const likePost = (postId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: POST_LIKE_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { postList } = getState()\r\n\r\n    const { data } = await axios.get(`/v1/post/like/${postId}`, config)\r\n\r\n    const dataIndex = postList.posts.findIndex(\r\n      (post) => post._id.toString() === data._id\r\n    )\r\n\r\n    console.log(data)\r\n    postList.posts[dataIndex] = data\r\n\r\n    dispatch({\r\n      type: POST_LIKE_SUCCESS,\r\n      payload: postList.posts,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_LIKE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createPost = (text, image) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: POST_CREATE_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const {\r\n      postList: { posts },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/v1/posts',\r\n      { text, postImage: image },\r\n      config\r\n    )\r\n\r\n    posts.unshift(data)\r\n\r\n    dispatch({\r\n      type: POST_CREATE_SUCCESS,\r\n      payload: posts,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Card, Col, Image, Row } from 'react-bootstrap'\r\nimport PostModal from './PostModal'\r\n\r\nconst PostCreater = ({ user }) => {\r\n  const [modalShow, setModalShow] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Card className='rounded-lg p-2'>\r\n        <Row className='p-2 px-4  align-items-center'>\r\n          <Col md={12} className='d-flex'>\r\n            <Image\r\n              className=' mr-2'\r\n              src={user && user.avatar}\r\n              style={{ width: '10%' }}\r\n              fluid='true'\r\n              roundedCircle\r\n            />\r\n\r\n            <Button\r\n              className='btn_post_create btn-body_tertiary rounded-pill text-left'\r\n              block\r\n              size='lg'\r\n              onClick={() => setModalShow(true)}\r\n            >\r\n              What on Your Mind, {user && user.name} ?\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n      <PostModal show={modalShow} onHide={() => setModalShow(false)} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostCreater\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst DateFormat = ({ children }) => {\r\n  return <p className='mb-0 text-secondary'>{moment(children).format('LLL')}</p>\r\n}\r\n\r\nexport default DateFormat\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  FormControl,\r\n  Image,\r\n  InputGroup,\r\n  ListGroup,\r\n  Row,\r\n} from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { likePost } from '../actions/postActions'\r\n\r\nimport DateFormat from './Date'\r\n\r\nconst Post = ({ post }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const alreadyLiked = post.likes.find(\r\n    (r) => r.user.toString() === userInfo.id.toString()\r\n  )\r\n\r\n  const [comment, setComment] = useState()\r\n  const [like, setLike] = useState(post.likes.includes(alreadyLiked))\r\n\r\n  const [likeCount, setLikeCount] = useState(false)\r\n\r\n  const likeHandler = () => {\r\n    setLike(!like)\r\n    setLikeCount(!likeCount)\r\n\r\n    dispatch(likePost(post._id))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className='rounded-lg my-4'>\r\n        <Card.Body className='px-0 py-1'>\r\n          <Row className='p-2 px-2 align-items-center justify-content-between'>\r\n            <Col md={8} className='d-flex align-items-center'>\r\n              <Image\r\n                src={post.avatar}\r\n                style={{ width: '50px', height: '50px' }}\r\n                fluid='true'\r\n                roundedCircle\r\n              />\r\n              <div className='ml-3'>\r\n                <h6 className='text-2 text-primary mb-0'>{post.name}</h6>\r\n                <DateFormat>{post.date}</DateFormat>\r\n              </div>\r\n            </Col>\r\n            <Col md={4} className='text-right pr-4'>\r\n              <i className='fas fa-ellipsis-v icon'></i>\r\n            </Col>\r\n          </Row>\r\n\r\n          {post.postImage ? (\r\n            <>\r\n              <p className='pl-2 my-1 text-2'>{post.text}</p>\r\n              <Card.Img src={post.postImage} fluid />\r\n            </>\r\n          ) : (\r\n            <h2 className='pl-2 my-1 '>{post.text}</h2>\r\n          )}\r\n\r\n          <ListGroup className='px-3' variant='flush'>\r\n            <ListGroup.Item>\r\n              <Row className='align-items-center justify-content-between'>\r\n                <Col className='text-left'>\r\n                  <i className='fas fa-thumbs-up text-primary mr-2'></i>\r\n                  <span>{post.likes.length} Likes</span>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                  <span>{post.comments.length} Comments</span>\r\n                  <i className='fas fa-comment-alt text-primary ml-2'></i>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row className='align-items-center justify-content-between'>\r\n                <Col className='text-left font-weight-light post_button'>\r\n                  <span\r\n                    className={`${\r\n                      like ? 'text-primary' : 'text-color_primary'\r\n                    }`}\r\n                    onClick={likeHandler}\r\n                  >\r\n                    <i\r\n                      className={` fa-thumbs-up icon ${\r\n                        like ? 'fas' : 'fal'\r\n                      }  mr-2`}\r\n                    ></i>\r\n                    <span className='text-2'>Like</span>\r\n                  </span>\r\n                </Col>\r\n                <Col className='text-center font-weight-light post_button'>\r\n                  <i className='fal fa-comment-alt icon  mr-2'></i>\r\n                  <span className='text-2'>Comment</span>\r\n                </Col>\r\n                <Col className='text-right font-weight-light post_button'>\r\n                  <i className='fal fa-share icon  mr-2'></i>\r\n                  <span className='text-2'>Share</span>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row className='align-items-center '>\r\n                <Col md={10} className='px-0 d-flex'>\r\n                  <Image\r\n                    className=' mr-2'\r\n                    src={userInfo && userInfo.avatar}\r\n                    style={{ width: '10%' }}\r\n                    fluid='true'\r\n                    roundedCircle\r\n                  />\r\n                  <InputGroup style={{ width: '90%' }}>\r\n                    <FormControl\r\n                      className='bg-body_tertiary border-0 text-blue_secondary rounded-pill'\r\n                      type='text'\r\n                      placeholder='Write a comment'\r\n                      value={comment}\r\n                      required\r\n                      onChange={(e) => setComment(e.target.value)}\r\n                    ></FormControl>\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col md={2}>\r\n                  <Button variant='primary rounded-pill px-4' size='small'>\r\n                    Post\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='d-flex justify-content-center'>\r\n      <Spinner\r\n        className='mt-5'\r\n        animation='border'\r\n        role='status'\r\n        variant='primary'\r\n        style={{ width: '10rem', height: '10rem' }}\r\n      >\r\n        <span className='sr-only'>Loading...</span>\r\n      </Spinner>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Post from './Post'\r\n\r\nimport Message from './Message'\r\nimport Loader from './Loader'\r\n\r\nconst PostList = ({ history }) => {\r\n  const postList = useSelector((state) => state.postList)\r\n  const { loading, posts, error } = postList\r\n\r\n  return error ? (\r\n    <Message>{error}</Message>\r\n  ) : loading ? (\r\n    <Loader />\r\n  ) : (\r\n    posts.map((post) => <Post key={post._id} post={post} />)\r\n  )\r\n\r\n  // return <Loader />\r\n}\r\n\r\nexport default PostList\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getEmail } from '../actions/authActions'\r\nimport { getPosts } from '../actions/postActions'\r\nimport Header from '../components/Header'\r\nimport Footer from '../components/Footer'\r\nimport Message from '../components/Message'\r\n\r\nimport PostCreater from '../components/PostCreater'\r\nimport PostList from '../components/PostList'\r\n\r\nconst HomeScreen = ({ history, location }) => {\r\n  const dispatch = useDispatch()\r\n  const [verifiedAlert, setVerifiedAlert] = useState(true)\r\n\r\n  const params = location.pathname\r\n\r\n  const [show, setShow] = useState(true)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  console.log(userLogin)\r\n\r\n  const verifyEmail = useSelector((state) => state.verifyEmail)\r\n  const { message } = verifyEmail\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    dispatch(getPosts())\r\n  }, [history, userInfo, dispatch])\r\n\r\n  const verifyHandler = () => {\r\n    dispatch(getEmail())\r\n    setShow(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header history={history} user={userInfo} />\r\n\r\n      <div className='main_content'>\r\n        <Container fluid>\r\n          <Row className='justify-content-between'>\r\n            <Col md={3}></Col>\r\n            <Col md={5}>\r\n              {params && params.toString() === '/verified' && verifiedAlert && (\r\n                <Alert\r\n                  variant='success'\r\n                  onClose={() => setVerifiedAlert(false)}\r\n                  dismissible\r\n                >\r\n                  <h2 className='font-weight-light'>You are a creater now</h2>\r\n                </Alert>\r\n              )}\r\n              {params && params.toString() === '/notverified' && verifiedAlert && (\r\n                <Alert\r\n                  variant='danger'\r\n                  onClose={() => setVerifiedAlert(false)}\r\n                  dismissible\r\n                >\r\n                  <h2 className='font-weight-light'>\r\n                    Soory, There was Some Error verifying your Account.\r\n                  </h2>\r\n                </Alert>\r\n              )}\r\n              {message && (\r\n                <Message variant='success'>{message.message}</Message>\r\n              )}\r\n\r\n              {userInfo && !userInfo.isVerified && show && (\r\n                <Alert\r\n                  variant='warning'\r\n                  onClose={() => setShow(false)}\r\n                  dismissible\r\n                >\r\n                  <Alert.Heading>Verify Your Email Address</Alert.Heading>\r\n                  <h6 className='text-2 mb-2'>\r\n                    You are just Viewer Now. To be a creater and post amazing\r\n                    posts,\r\n                  </h6>\r\n                  <Button variant='outline-warning' onClick={verifyHandler}>\r\n                    Verify Email Address\r\n                  </Button>\r\n                </Alert>\r\n              )}\r\n\r\n              <PostCreater user={userInfo} history={history} />\r\n              <PostList />\r\n            </Col>\r\n            <Col md={3}></Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <Footer background='bg-body_secondary' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Container, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../actions/authActions'\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Footer from '../components/Footer'\r\nimport Message from '../components/Message'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('?')[1] : '/'\r\n\r\n  console.log(redirect)\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row className='login_mainContent align-items-center justify-content-between'>\r\n          <Col md={5}>\r\n            <Image src='./logo.svg' fluid='true' />\r\n            <p className='my-2 text_desc'>\r\n              Connect with developers all around the world on Linkdev\r\n            </p>\r\n          </Col>\r\n          <Col md={5} className='bg-body_secondary p-5 rounded-lg'>\r\n            <h1>Sign In</h1>\r\n            {error && <Message>{error}</Message>}\r\n            {/* {loading && <Loader />} */}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='email'>\r\n                <Form.Label className='form_label'>\r\n                  Username or Email\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className='bg-body_tertiary border-0 text-blue_secondary'\r\n                  size='lg'\r\n                  type='text'\r\n                  placeholder='Enter Username or Email'\r\n                  value={email}\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  className='bg-body_tertiary border-0'\r\n                  size='lg'\r\n                  type='password'\r\n                  placeholder='Enter password'\r\n                  value={password}\r\n                  required\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button\r\n                className='text-white'\r\n                type='submit'\r\n                variant='primary'\r\n                size='lg'\r\n                block\r\n              >\r\n                Sign In\r\n              </Button>\r\n            </Form>\r\n            <Link to={'/forgotpassword'} className='d-block text-center mt-3'>\r\n              Forgot Password?\r\n            </Link>\r\n            <hr className='bg-blue_secondary border-bottom-2' />\r\n            <Row className='py-3'>\r\n              <Col>\r\n                <LinkContainer to='/register'>\r\n                  <Button\r\n                    className='text-white'\r\n                    type='submit'\r\n                    variant='blue_primary'\r\n                    size='lg'\r\n                    block\r\n                  >\r\n                    Create New Account\r\n                  </Button>\r\n                </LinkContainer>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Image,\r\n  InputGroup,\r\n  Row,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { register } from '../actions/authActions'\r\nimport Footer from '../components/Footer'\r\nimport Message from '../components/Message'\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [date, setDate] = useState('')\r\n  const [validated, setValidated] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo, error } = userLogin\r\n\r\n  const [redirect, setRedirect] = useState('/')\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/')\r\n    }\r\n  }, [history, userInfo, validated])\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault()\r\n    const form = event.currentTarget\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation()\r\n    } else {\r\n      dispatch(register(email, password, name, date))\r\n    }\r\n\r\n    setValidated(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row className='login_mainContent align-items-center justify-content-between'>\r\n          <Col md={5}>\r\n            <Image src='./logo.svg' fluid='true' />\r\n            <p className='my-2 text_desc'>\r\n              Connect with developers all around the world on Linkdev\r\n            </p>\r\n          </Col>\r\n          <Col md={5} className='bg-body_secondary p-5 rounded-lg'>\r\n            <h1 className='mb-0'>Create Account</h1>\r\n            <p className='text-blue_secondary mt-0 mb-1'>It's quick and easy</p>\r\n            {error && <Message>{error}</Message>}\r\n            {/* {loading && <Loader />} */}\r\n\r\n            <Form onSubmit={submitHandler} noValidate validated={validated}>\r\n              <Form.Group className='mb-1' controlId='name'>\r\n                <Form.Label className='form_label mb-1'>Full Name</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    className='bg-body_tertiary border-0 text-blue_secondary rounded'\r\n                    type='text'\r\n                    placeholder='Name'\r\n                    value={name}\r\n                    required\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                  <Form.Control.Feedback type='valid'>\r\n                    Looks good!\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback type='invalid'>\r\n                    Please enter a Username\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group className='mb-1' controlId='email'>\r\n                <Form.Label className='mb-1 form_label'>\r\n                  Email Adress\r\n                </Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    className='bg-body_tertiary border-0 text-blue_secondary rounded'\r\n                    type='text'\r\n                    placeholder='Email Address'\r\n                    value={email}\r\n                    required\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  ></Form.Control>\r\n                  <Form.Control.Feedback type='valid'>\r\n                    Looks good!\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback type='invalid'>\r\n                    Please enter valid Email\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group className='mb-1' controlId='password'>\r\n                <Form.Label className='form_label mb-1'>Password</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    className='bg-body_tertiary border-0 text-blue_secondary rounded'\r\n                    type='password'\r\n                    placeholder='New Password'\r\n                    value={password}\r\n                    required\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  ></Form.Control>\r\n                  <Form.Control.Feedback type='valid'>\r\n                    Looks good!\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback type='invalid'>\r\n                    Please enter a Password\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='Birthdate'>\r\n                <Form.Label className='form_label mb-1'>Birthdate</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    className='bg-body_tertiary border-0 text-blue_secondary rounded'\r\n                    type='date'\r\n                    placeholder='Birthdate'\r\n                    value={date}\r\n                    required\r\n                    onChange={(e) => setDate(e.target.value)}\r\n                  ></Form.Control>\r\n                  <Form.Control.Feedback type='valid'>\r\n                    Looks good!\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback type='invalid'>\r\n                    Please enter a Birthdate\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Button\r\n                className='text-white'\r\n                type='submit'\r\n                variant='primary'\r\n                block\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Form>\r\n            <p className='text-0 mt-1'>\r\n              By clicking Sign Up, you accept our{' '}\r\n              <Link to={'/forgotpassword'}>Privacy Policy </Link> and{' '}\r\n              <Link>Terms of Service.</Link>\r\n            </p>\r\n\r\n            <hr className='bg-blue_secondary border-bottom-2' />\r\n            <Row>\r\n              <Col>\r\n                <LinkContainer to='/login'>\r\n                  <Button\r\n                    className='text-white'\r\n                    type='submit'\r\n                    variant='blue_primary'\r\n                    block\r\n                  >\r\n                    Sign In\r\n                  </Button>\r\n                </LinkContainer>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { logout } from '../actions/authActions'\r\nimport Footer from '../components/Footer'\r\n\r\nconst VerifyScreen = ({ location, history }) => {\r\n  const dispatch = useDispatch()\r\n  const query = location.search\r\n\r\n  useEffect(() => {\r\n    if (query && query.toString() === '?verified') {\r\n      dispatch(logout())\r\n    }\r\n\r\n    if (!query) {\r\n      history.push('/')\r\n    }\r\n  }, [dispatch, query, history])\r\n\r\n  return (\r\n    <>\r\n      {query && query.toString() === '?verified' ? (\r\n        <div\r\n          className='d-flex align-items-center justify-content-center'\r\n          style={{ minHeight: '90vh' }}\r\n        >\r\n          <Card className='rounded-lg col-md-4 text-center p-5'>\r\n            <Card.Title className=' text-3 text-primary'>\r\n              Your Account Has Been Verified\r\n            </Card.Title>\r\n\r\n            <i\r\n              className='fal fa-check-circle text-primary my-4'\r\n              style={{ fontSize: '10rem' }}\r\n            ></i>\r\n            <Card.Body>\r\n              <p className='text-2'>\r\n                We have Succesfully verified your account. Now you are the\r\n                creator of our community and post your posts.\r\n              </p>\r\n            </Card.Body>\r\n\r\n            <Link to='/' className='btn btn-primary btn-lg text-white'>\r\n              Continue\r\n            </Link>\r\n          </Card>\r\n        </div>\r\n      ) : (\r\n        query &&\r\n        query.toString() === '?notverified' && (\r\n          <div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{ minHeight: '90vh' }}\r\n          >\r\n            <Card className='rounded-lg col-md-4 text-center p-5'>\r\n              <Card.Title className=' text-3 text-danger'>\r\n                Account Verification Failed\r\n              </Card.Title>\r\n\r\n              <i\r\n                className='fal fa-times-circle text-danger my-4'\r\n                style={{ fontSize: '10rem' }}\r\n              ></i>\r\n              <Card.Body>\r\n                <p className='text-2'>\r\n                  We couldn't Verify your account. There was some error in the\r\n                  process. Please contact{' '}\r\n                  <span class='text-danger'>Sabin Subedi</span> From the link\r\n                  below.\r\n                </p>\r\n              </Card.Body>\r\n\r\n              <a\r\n                href='https://www.messenger.com/t/100003158884234'\r\n                className='btn btn-danger btn-lg text-white'\r\n              >\r\n                Contact Us\r\n              </a>\r\n            </Card>\r\n          </div>\r\n        )\r\n      )}\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VerifyScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Container, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../actions/authActions'\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Footer from '../components/Footer'\r\nimport Message from '../components/Message'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/')\r\n    }\r\n  }, [history, userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row className='login_mainContent align-items-center justify-content-between'>\r\n          <Col md={5}>\r\n            <Image src='./logo.svg' fluid='true' />\r\n            <p className='my-2 text_desc'>\r\n              Connect with developers all around the world on Linkdev\r\n            </p>\r\n          </Col>\r\n          <Col md={5} className='bg-body_secondary p-5 rounded-lg'>\r\n            <h1>Reset Password</h1>\r\n            <p className='text-secondary text-1'>\r\n              Enter your email address to request password change\r\n            </p>\r\n            {error && <Message>{error}</Message>}\r\n            {/* {loading && <Loader />} */}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='email'>\r\n                <Form.Control\r\n                  className='bg-body_tertiary border-0 text-blue_secondary'\r\n                  size='lg'\r\n                  type='text'\r\n                  placeholder='Email Address'\r\n                  value={email}\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button\r\n                className='text-white'\r\n                type='submit'\r\n                variant='primary'\r\n                size='lg'\r\n                block\r\n              >\r\n                Request Password Reset\r\n              </Button>\r\n            </Form>\r\n\r\n            <hr className='bg-blue_secondary border-bottom-2 mb-2 mt-4' />\r\n\r\n            <p className='d-block text-primary text-center my-0'>\r\n              Remember Password ?\r\n            </p>\r\n            <Row className='py-3'>\r\n              <Col>\r\n                <LinkContainer to='/login'>\r\n                  <Button\r\n                    className='text-white'\r\n                    type='submit'\r\n                    variant='blue_primary'\r\n                    size='lg'\r\n                    block\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </LinkContainer>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport Header from '../components/Header'\r\nimport { useSelector } from 'react-redux'\r\nimport Footer from '../components/Footer'\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n  }, [history, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <Header history={history} user={userInfo} />\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md={4}></Col>\r\n          <Col md={8}></Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport HomeScreen from './screens/HomeScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport VerifyScreen from './screens/VerifyScreen'\nimport ForgotPasswordScreen from './screens/ForgotPasswordScreen'\nimport 'emoji-mart/css/emoji-mart.css'\nimport ProfileScreen from './screens/ProfileScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <main>\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/forgotpassword' component={ForgotPasswordScreen} />\n        <Route path='/profile/:id' component={ProfileScreen} />\n        <Route path='/verify/:token' component={VerifyScreen} />\n        <Route path='/verified' component={VerifyScreen} />\n        <Route path='/' component={HomeScreen} exact />\n      </main>\n    </Router>\n  )\n}\n\nexport default App\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { userLoginReducer, verifyEmailReducer } from './reducers/authReducers'\r\nimport { postCreateReducer, postListReducer } from './reducers/postReducers'\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  postList: postListReducer,\r\n  postCreate: postCreateReducer,\r\n  verifyEmail: verifyEmailReducer,\r\n})\r\n\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : ''\r\n\r\nconst intialState = {\r\n  userLogin: {\r\n    userInfo: userInfoFromLocalStorage,\r\n  },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\n// console.log(userInfoFromLocalStorage)\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  intialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_VERIFY_FAIL,\r\n  USER_VERIFY_REQUEST,\r\n  USER_VERIFY_SUCCESS,\r\n} from '../constants/authConstant'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const verifyEmailReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_VERIFY_REQUEST:\r\n      return { loading: true }\r\n    case USER_VERIFY_SUCCESS:\r\n      return { loading: false, sucess: true, message: action.payload }\r\n    case USER_VERIFY_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  POST_CREATE_FAIL,\r\n  POST_CREATE_REQUEST,\r\n  POST_CREATE_SUCCESS,\r\n  POST_LIKE_FAIL,\r\n  POST_LIKE_REQUEST,\r\n  POST_LIKE_SUCCESS,\r\n  POST_LIST_FAIL,\r\n  POST_LIST_REQUEST,\r\n  POST_LIST_SUCCESS,\r\n} from '../constants/postConstant'\r\n\r\nexport const postListReducer = (state = { posts: [] }, action) => {\r\n  switch (action.type) {\r\n    case POST_LIST_REQUEST:\r\n      return { loading: true, posts: [] }\r\n    case POST_LIST_SUCCESS:\r\n      return { loading: false, posts: action.payload }\r\n    case POST_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POST_LIKE_REQUEST:\r\n      return { ...state, likeLoading: true }\r\n    case POST_LIKE_SUCCESS:\r\n      return { likeLoading: false, success: true, posts: action.payload }\r\n    case POST_LIKE_FAIL:\r\n      return {\r\n        ...state,\r\n        likeLoading: false,\r\n        error: action.payload,\r\n      }\r\n    case POST_CREATE_SUCCESS:\r\n      return { ...state, loading: false, success: true, posts: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const postCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POST_CREATE_REQUEST:\r\n      return { loading: true }\r\n\r\n    case POST_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './sass/main.css'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}