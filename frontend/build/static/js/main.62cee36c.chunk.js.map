{"version":3,"sources":["constants/authConstant.js","constants/postConstant.js","components/Header.js","actions/authActions.js","components/Footer.js","components/Message.js","components/PostModal.js","actions/postActions.js","components/PostCreater.js","components/Date.js","components/Post.js","components/Loader.js","components/PostList.js","components/Meta.js","screens/HomeScreen.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/VerifyScreen.js","screens/ForgotPasswordScreen.js","constants/profileConstants.js","components/ProfileModal.js","actions/profileActions.js","components/ProfileAvatarModal.js","screens/ProfileScreen.js","screens/PostScreen.js","App.js","store.js","reducers/authReducers.js","reducers/postReducers.js","reducers/profileReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_VERIFY_REQUEST","USER_VERIFY_SUCCESS","USER_VERIFY_FAIL","POST_LIST_REQUEST","POST_LIST_SUCCESS","POST_LIST_FAIL","POST_LIKE_REQUEST","POST_LIKE_SUCCESS","POST_LIKE_FAIL","POST_CREATE_REQUEST","POST_CREATE_SUCCESS","POST_CREATE_FAIL","POST_COMMENT_REQUEST","POST_COMMENT_SUCCESS","POST_COMMENT_FAIL","USER_POST_LIST_REQUEST","USER_POST_LIST_SUCCESS","USER_POST_LIST_FAIL","POST_BY_ID_REQUEST","POST_BY_ID_SUCCESS","POST_BY_ID_FAIL","Header","history","user","dispatch","useDispatch","avy","useSelector","state","userAvatar","avatar","useState","setAvatar","useEffect","JSON","stringify","Navbar","className","bg","expand","variant","collapseOnSelect","sticky","Container","fluid","to","Brand","Image","src","style","width","alt","Toggle","aria-controls","Collapse","id","Nav","Link","roundedCircle","height","name","NavDropdown","alignRight","Item","onClick","a","type","localStorage","removeItem","push","Footer","background","Row","Col","md","defaultProps","Message","children","Alert","PostModal","props","setUploading","image","setImage","text","setText","picker","setPicker","userInfo","userLogin","uploadFileHandler","e","file","target","files","formData","FormData","append","config","headers","axios","post","data","console","log","error","emojiPickerStyle","display","position","zIndex","right","Modal","size","aria-labelledby","centered","closeButton","Title","Body","Badge","isVerified","Form","onSubmit","preventDefault","getState","posts","postList","authorization","token","postImage","unshift","payload","response","message","createPost","onHide","Group","Control","as","row","placeholder","value","onChange","block","File","label","set","theme","title","exclude","onSelect","emoji","native","Button","disabled","PostCreater","modalShow","setModalShow","alertShow","setAlertShow","onClose","dismissible","Card","show","DateFormat","moment","format","Post","comment1","comment2","postComment","postScreen","commentInput","useRef","commentStatus","alreadyLiked","likes","find","r","toString","comment","setComment","includes","like","setLike","length","likeCount","setLikeCount","comments","commentCount","setCommentCount","date","Img","ListGroup","postId","_id","userPostList","get","dataIndex","findIndex","userPostIndex","current","focus","map","textTransform","commentdate","commentText","success","loading","Spinner","animation","role","aria-hidden","InputGroup","FormControl","ref","required","postById","put","newComment","Loader","PostList","home","Meta","description","keywords","Helmet","content","HomeScreen","location","verifiedAlert","setVerifiedAlert","params","pathname","setShow","verifyEmail","Heading","LoginScreen","email","setEmail","password","setPassword","redirect","search","split","setItem","login","controlId","Label","RegisterScreen","setName","setDate","validated","setValidated","event","currentTarget","checkValidity","stopPropagation","register","noValidate","hasValidation","Feedback","VerifyScreen","query","minHeight","fontSize","class","href","PROFILE_REQUEST","PROFILE_SUCCESS","PROFILE_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PROFILE_AVATAR_SUCCESS","Profile","profile","userProfile","bio","setBio","setLocation","facebook","setFacebook","twitter","setTwitter","github","setGithub","website","setWebsite","linkedin","setLinkedin","updateProfile","rows","column","sm","ProfileAvatarModal","existing","getItem","parse","updateProfileAvatar","ProfileScreen","userId","match","AvatarModalShow","setAvatarModalShow","loadingUser","getProfileDetail","getUserPosts","rel","startsWith","instagram","ProfileModal","PostScreen","getPostById","App","path","component","ForgotPasswordScreen","exact","reducer","combineReducers","action","likeLoading","postCreate","sucess","status","intialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62cee36c.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_VERIFY_REQUEST = 'USER_VERIFY_REQUEST'\r\nexport const USER_VERIFY_SUCCESS = 'USER_VERIFY_SUCCESS'\r\nexport const USER_VERIFY_FAIL = 'USER_VERIFY_FAIL'\r\n","export const POST_LIST_REQUEST = 'POST_LIST_REQUEST'\r\nexport const POST_LIST_SUCCESS = 'POST_LIST_SUCCESS'\r\nexport const POST_LIST_FAIL = 'POST_LIST_FAIL'\r\n\r\nexport const POST_LIKE_REQUEST = 'POST_LIKE_REQUEST'\r\nexport const POST_LIKE_SUCCESS = 'POST_LIKE_SUCCESS'\r\nexport const POST_LIKE_FAIL = 'POST_LIKE_FAIL'\r\nexport const POST_LIKE_RESET = 'POST_LIKE_RESET'\r\n\r\nexport const POST_CREATE_REQUEST = 'POST_CREATE_REQUEST'\r\nexport const POST_CREATE_SUCCESS = 'POST_CREATE_SUCCESS'\r\nexport const POST_CREATE_FAIL = 'POST_CREATE_FAIL'\r\n\r\nexport const POST_COMMENT_REQUEST = 'POST_COMMENT_REQUEST'\r\nexport const POST_COMMENT_SUCCESS = 'POST_COMMENT_SUCCESS'\r\nexport const POST_COMMENT_FAIL = 'POST_COMMENT_FAIL'\r\n\r\nexport const USER_POST_LIST_REQUEST = 'USER_POST_LIST_REQUEST'\r\nexport const USER_POST_LIST_SUCCESS = 'USER_POST_LIST_SUCCESS'\r\nexport const USER_POST_LIST_FAIL = 'USER_POST_LIST_FAIL'\r\n\r\nexport const POST_BY_ID_REQUEST = 'POST_BY_ID_REQUEST'\r\nexport const POST_BY_ID_SUCCESS = 'POST_BY_ID_SUCCESS'\r\nexport const POST_BY_ID_FAIL = 'POST_BY_ID_FAIL'\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Container, Image, Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/authActions'\r\n\r\nconst Header = ({ history, user }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userAvatar = useSelector((state) => state.userAvatar)\r\n  const { avatar: avy } = userAvatar\r\n\r\n  const [avatar, setAvatar] = useState(user && user.avatar)\r\n\r\n  useEffect(() => {\r\n    if (JSON.stringify(avy) !== '{}') {\r\n      setAvatar(avy)\r\n    }\r\n  }, [avy])\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <Navbar\r\n      className='shadow-sm'\r\n      bg='body_primary'\r\n      expand='lg'\r\n      variant='dark'\r\n      collapseOnSelect\r\n      sticky='top'\r\n    >\r\n      <Container fluid>\r\n        <LinkContainer to='/'>\r\n          <Navbar.Brand>\r\n            <Image\r\n              className='text-primary text-4 font-weight-bold'\r\n              src='\\logo.svg'\r\n              style={{ width: '60%' }}\r\n              alt='Linkdev'\r\n              fluid\r\n            ></Image>\r\n          </Navbar.Brand>\r\n        </LinkContainer>\r\n\r\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n        <Navbar.Collapse id='basic-navbar-nav'>\r\n          <Nav className='ml-auto text-2'>\r\n            <LinkContainer to='/'>\r\n              <Nav.Link className='bg-body_tertiary text-primary p-2 px-3 rounded-lg'>\r\n                <i className='fas fa-home mr-2 '></i>Home\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to={`/profile/${user && user.id}`}>\r\n              <Nav.Link className='d-flex text-1 align-items-center text-color_secondary capital'>\r\n                <Image\r\n                  src={avatar}\r\n                  className='mx-2 '\r\n                  fluid\r\n                  roundedCircle\r\n                  style={{\r\n                    height: '30px',\r\n                    width: '30px',\r\n                  }}\r\n                />{' '}\r\n                {user && user.name}\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n            <NavDropdown\r\n              className='bg-body_secondary text-white px-2 rounded-circle text-white'\r\n              id='setting'\r\n              alignRight\r\n            >\r\n              <LinkContainer to={`/profile/${user && user.id}`}>\r\n                <NavDropdown.Item>\r\n                  <i className='fas fa-user mr-2'></i> Profile\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <LinkContainer to='/feedback'>\r\n                <NavDropdown.Item>\r\n                  <i className='fas fa-comment-alt mr-2'></i> Give Feedback\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <LinkContainer to='/bug'>\r\n                <NavDropdown.Item>\r\n                  <i className='fas fa-bug mr-2'></i>Report a Bug\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <LinkContainer to='/bug'>\r\n                <NavDropdown.Item>\r\n                  <i className='fab fa-discord mr-2'></i>Join Discord\r\n                </NavDropdown.Item>\r\n              </LinkContainer>\r\n              <NavDropdown.Item onClick={logoutHandler}>\r\n                <i className='fas fa-sign-out-alt mr-2'></i>Logout\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_VERIFY_FAIL,\r\n  USER_VERIFY_REQUEST,\r\n  USER_VERIFY_SUCCESS,\r\n} from '../constants/authConstant'\r\nimport axios from 'axios'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      'https://linkdev-sabin.herokuapp.com/v1/auth/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const register = (email, password, name, date) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      'https://linkdev-sabin.herokuapp.com/v1/auth/register',\r\n      { email, password, date, name },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch({ type: USER_LOGOUT })\r\n\r\n  localStorage.removeItem('userInfo')\r\n}\r\n\r\nexport const getEmail = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_VERIFY_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      'https://linkdev-sabin.herokuapp.com/v1/auth/verifyEmail',\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_VERIFY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_VERIFY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nconst Footer = ({ background }) => {\r\n  return (\r\n    <footer className={background}>\r\n      <Container>\r\n        <Row className='footer align-items-center justify-content-between'>\r\n          <Col md={6}>\r\n            <span>Copyright &copy;linkdev </span>\r\n            <span>v1.0</span>\r\n          </Col>\r\n          <Col\r\n            md={6}\r\n            className='ml-auto text-right d-flex flex-wrap align-items-center justify-content-end'\r\n          >\r\n            <LinkContainer to='/privacy' className='mx-2'>\r\n              <span className='mx-1'>Privacy & Policy</span>\r\n            </LinkContainer>\r\n            <LinkContainer to='/privacy'>\r\n              <span className='mx-1'>Report a Bug</span>\r\n            </LinkContainer>\r\n            <LinkContainer to='/privacy'>\r\n              <i className='icon fab fa-github mx-2'></i>\r\n            </LinkContainer>\r\n            <LinkContainer to='/privacy'>\r\n              <i className='icon fab fa-discord mx-2'></i>\r\n            </LinkContainer>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nFooter.defaultProps = {\r\n  background: 'bg_body_primary',\r\n}\r\n\r\nexport default Footer\r\n","import { Alert } from 'react-bootstrap'\r\nimport React from 'react'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return (\r\n    <Alert className='mt-4' variant={variant}>\r\n      {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'danger',\r\n  children: 'danger',\r\n}\r\n\r\nexport default Message\r\n","import { useState } from 'react'\r\nimport { Badge, Button, Col, Form, Image, Modal, Row } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { Picker } from 'emoji-mart'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createPost } from '../actions/postActions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction PostModal(props) {\r\n  const dispatch = useDispatch()\r\n\r\n  //eslint-disable-next-line\r\n  const [uploading, setUploading] = useState(false)\r\n  const [image, setImage] = useState(``)\r\n  const [text, setText] = useState(``)\r\n  const [picker, setPicker] = useState(false)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n        'https://linkdev-sabin.herokuapp.com/v1/upload',\r\n        formData,\r\n        config\r\n      )\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n      console.log(data)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const emojiPickerStyle = {\r\n    display: picker ? 'block' : 'none',\r\n    position: 'absolute',\r\n    zIndex: '100',\r\n    right: '0',\r\n    height: ' 20rem',\r\n    width: '20rem',\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(createPost(text, image))\r\n\r\n    props.onHide()\r\n    setText('')\r\n    setImage('')\r\n    setPicker(false)\r\n  }\r\n\r\n  const emojiOpener = () => {\r\n    setPicker(!picker)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size='lg'\r\n      aria-labelledby='contained-modal-title-vcenter'\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id='contained-modal-title-vcenter text-center'>\r\n          Create Post\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Row className='align-items-center justify-content-between'>\r\n          <Col className=''>\r\n            <LinkContainer to={`/profile/${userInfo && userInfo.id}`}>\r\n              <div className='d-inline-flex align-items-center cursor capital '>\r\n                <Image\r\n                  src={userInfo && userInfo.avatar}\r\n                  style={{ width: '50px', height: '50px' }}\r\n                  fluid='true'\r\n                  roundedCircle\r\n                />\r\n\r\n                <div className='ml-3'>\r\n                  <h6 className='text-2 text-primary mb-0'>\r\n                    {userInfo && userInfo.name}\r\n                  </h6>\r\n                  <Badge variant='blue_primary'>\r\n                    {userInfo && userInfo.isVerified ? 'Creator' : 'Viewer'}\r\n                  </Badge>\r\n                </div>\r\n              </div>\r\n            </LinkContainer>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Form onSubmit={submitHandler} className='mt-2'>\r\n          <Form.Group className='text'>\r\n            <Form.Control\r\n              className='create_input bg-body_secondary border-0 text-blue_secondary form_create'\r\n              as='textarea'\r\n              row={50}\r\n              size='lg'\r\n              placeholder={`What's on your mind, ${\r\n                userInfo && userInfo.name\r\n              } ?`}\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n            ></Form.Control>\r\n\r\n            {image && <Image src={image} fluid block />}\r\n          </Form.Group>\r\n\r\n          <Form.Group className='file'>\r\n            <Row className='align-items-center pr-5 postion-relative'>\r\n              <Col md={6}>\r\n                <Form.File\r\n                  id='image-file'\r\n                  className='bg-body_secondary d-inline-block'\r\n                  label='Insert Image'\r\n                  onChange={uploadFileHandler}\r\n                ></Form.File>\r\n              </Col>\r\n\r\n              <div className='emoji_picker ml-auto  postion-relative'>\r\n                <i\r\n                  onClick={emojiOpener}\r\n                  className='text-primary icon fal fa-smile-beam cursor'\r\n                ></i>\r\n                <Picker\r\n                  set='google'\r\n                  theme='dark'\r\n                  title='Pick Your Emoji'\r\n                  exclude={['flags']}\r\n                  style={emojiPickerStyle}\r\n                  onSelect={(emoji) => setText(text + emoji.native)}\r\n                />\r\n              </div>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Button\r\n            type='submit'\r\n            variant='primary'\r\n            block\r\n            disabled={!image && !text}\r\n          >\r\n            Post\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default PostModal\r\n","import axios from 'axios'\r\nimport {\r\n  POST_BY_ID_FAIL,\r\n  POST_BY_ID_REQUEST,\r\n  POST_BY_ID_SUCCESS,\r\n  POST_COMMENT_FAIL,\r\n  POST_COMMENT_REQUEST,\r\n  POST_COMMENT_SUCCESS,\r\n  POST_CREATE_FAIL,\r\n  POST_CREATE_REQUEST,\r\n  POST_CREATE_SUCCESS,\r\n  POST_LIKE_FAIL,\r\n  POST_LIKE_REQUEST,\r\n  POST_LIKE_SUCCESS,\r\n  POST_LIST_FAIL,\r\n  POST_LIST_REQUEST,\r\n  POST_LIST_SUCCESS,\r\n  USER_POST_LIST_FAIL,\r\n  USER_POST_LIST_REQUEST,\r\n  USER_POST_LIST_SUCCESS,\r\n} from '../constants/postConstant'\r\n\r\nexport const getPosts = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: POST_LIST_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      'https://linkdev-sabin.herokuapp.com/v1/posts',\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: POST_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const likePost = (postId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: POST_LIKE_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n      postList,\r\n      userPostList,\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `https://linkdev-sabin.herokuapp.com/v1/post/like/${postId}`,\r\n      config\r\n    )\r\n\r\n    const dataIndex = postList.posts.findIndex(\r\n      (post) => post._id.toString() === data._id\r\n    )\r\n\r\n    const userPostIndex = userPostList.posts.findIndex(\r\n      (post) => post._id.toString() === data._id\r\n    )\r\n\r\n    postList.posts[dataIndex] = data\r\n    userPostList.posts[userPostIndex] = data\r\n\r\n    dispatch({\r\n      type: POST_LIKE_SUCCESS,\r\n      payload: postList.posts,\r\n      userPostList: userPostList.posts,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_LIKE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createPost = (text, image) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: POST_CREATE_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const {\r\n      postList: { posts },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      'https://linkdev-sabin.herokuapp.com/v1/posts',\r\n      { text, postImage: image },\r\n      config\r\n    )\r\n\r\n    posts.unshift(data)\r\n\r\n    dispatch({\r\n      type: POST_CREATE_SUCCESS,\r\n      payload: posts,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserPosts = (userId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_POST_LIST_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `https://linkdev-sabin.herokuapp.com/v1/posts/${userId}`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_POST_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_POST_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const commentPost = (text, postId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: POST_COMMENT_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n      postById,\r\n      postList,\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `https://linkdev-sabin.herokuapp.com/v1/post/comment/${postId}`,\r\n      { text },\r\n      config\r\n    )\r\n\r\n    postList.posts &&\r\n      postList.posts\r\n        .find((post) => post._id === postId)\r\n        .comments.push(data.newComment)\r\n\r\n    postById && postById.post && postById.post.comments.push(data.newComment)\r\n\r\n    dispatch({\r\n      type: POST_COMMENT_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_COMMENT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const getPostById = (postId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: POST_BY_ID_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `https://linkdev-sabin.herokuapp.com/v1/post/${postId}`,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: POST_BY_ID_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_BY_ID_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Alert, Button, Card, Col, Image, Row } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport PostModal from './PostModal'\r\n\r\nconst PostCreater = ({ user }) => {\r\n  const [modalShow, setModalShow] = useState(false)\r\n\r\n  const [alertShow, setAlertShow] = useState(false)\r\n\r\n  const userAvatar = useSelector((state) => state.userAvatar)\r\n  const { avatar: avy } = userAvatar\r\n\r\n  const [avatar, setAvatar] = useState(user && user.avatar)\r\n\r\n  useEffect(() => {\r\n    if (JSON.stringify(avy) !== '{}') {\r\n      setAvatar(avy)\r\n    }\r\n  }, [avy])\r\n\r\n  const clickHandler = () => {\r\n    if (user && !user.isVerified) {\r\n      setAlertShow(true)\r\n    } else {\r\n      setModalShow(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {alertShow && (\r\n        <Alert variant='danger' onClose={() => setAlertShow(false)} dismissible>\r\n          Your Email is not verified to post on Linkdev. Verify Your Email To\r\n          Post{' '}\r\n        </Alert>\r\n      )}\r\n\r\n      <Card className='rounded-lg p-2'>\r\n        <Row className='p-2 px-4  align-items-center'>\r\n          <Col md={12} className='d-flex'>\r\n            <Image\r\n              className=' mr-2'\r\n              src={avatar}\r\n              style={{ width: '10%' }}\r\n              fluid='true'\r\n              roundedCircle\r\n            />\r\n\r\n            <Button\r\n              className='btn_post_create btn-body_tertiary rounded-pill text-left capital'\r\n              block\r\n              size='lg'\r\n              onClick={clickHandler}\r\n              // disabled={user && !user.isVerified}\r\n            >\r\n              What on Your Mind, {user && user.name} ?\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n      <PostModal show={modalShow} onHide={() => setModalShow(false)} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostCreater\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst DateFormat = ({ children }) => {\r\n  return <p className='mb-0 text-secondary'>{moment(children).format('LLL')}</p>\r\n}\r\n\r\nexport default DateFormat\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  FormControl,\r\n  Image,\r\n  InputGroup,\r\n  ListGroup,\r\n  Row,\r\n  Spinner,\r\n} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { commentPost, likePost } from '../actions/postActions'\r\n\r\nimport DateFormat from './Date'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Post = ({ post, comment1, comment2, postComment, postScreen }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const commentInput = useRef(null)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const commentStatus = useSelector((state) => state.commentStatus)\r\n\r\n  const alreadyLiked = post.likes.find((r) =>\r\n    r.user ? r.user.toString() === userInfo.id.toString() : ''\r\n  )\r\n\r\n  const [comment, setComment] = useState('')\r\n  const [like, setLike] = useState(post.likes.includes(alreadyLiked))\r\n\r\n  const [likeCount, setLikeCount] = useState(post.likes.length)\r\n  const [commentCount, setCommentCount] = useState(\r\n    post && post.comments && post.comments.length\r\n  )\r\n\r\n  const userAvatar = useSelector((state) => state.userAvatar)\r\n  const { avatar: avy } = userAvatar\r\n\r\n  const [avatar, setAvatar] = useState(userInfo && userInfo.avatar)\r\n\r\n  useEffect(() => {\r\n    if (JSON.stringify(avy) !== '{}') {\r\n      setAvatar(avy)\r\n    }\r\n  }, [avy])\r\n\r\n  const commentButtonHandler = () => {\r\n    commentInput.current.focus()\r\n  }\r\n\r\n  const likeHandler = () => {\r\n    setLike(!like)\r\n    // setLikeCount(!likeCount)\r\n    if (!like) {\r\n      setLikeCount(likeCount + 1)\r\n    } else {\r\n      setLikeCount(likeCount - 1)\r\n    }\r\n    dispatch(likePost(post._id))\r\n  }\r\n\r\n  const commentHandler = () => {\r\n    dispatch(commentPost(comment, post._id))\r\n    setCommentCount(commentCount + 1)\r\n    setComment('')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className='rounded-lg my-4'>\r\n        <Card.Body className='px-0 py-1'>\r\n          <Row className='p-2 px-2 align-items-center justify-content-between'>\r\n            <LinkContainer to={`/profile/${post.user}`}>\r\n              <Col md={8} className='d-flex align-items-center cursor'>\r\n                <Image\r\n                  src={post.avatar}\r\n                  style={{ width: '50px', height: '50px' }}\r\n                  fluid='true'\r\n                  roundedCircle\r\n                />\r\n                <div className='ml-3'>\r\n                  <h6 className='text-2 text-primary mb-0 capital'>\r\n                    {post.name}\r\n                  </h6>\r\n                  <DateFormat>{post.date}</DateFormat>\r\n                </div>\r\n              </Col>\r\n            </LinkContainer>\r\n\r\n            <Col md={4} className='text-right pr-4'>\r\n              <i className='fas fa-ellipsis-v icon'></i>\r\n            </Col>\r\n          </Row>\r\n\r\n          {post.postImage ? (\r\n            <>\r\n              <p className='pl-2 my-1 text-2'>{post.text}</p>\r\n              <Card.Img src={post.postImage} fluid />\r\n            </>\r\n          ) : (\r\n            <h2 className='pl-2 my-1 '>{post.text}</h2>\r\n          )}\r\n\r\n          <ListGroup className='px-3' variant='flush'>\r\n            <ListGroup.Item>\r\n              <Row className='align-items-center justify-content-between'>\r\n                <Col className='text-left'>\r\n                  <i className='fas fa-thumbs-up text-primary mr-2'></i>\r\n                  <span>{likeCount} Likes</span>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                  <span>{commentCount} Comments</span>\r\n                  <i className='fas fa-comment-alt text-primary ml-2'></i>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row className='align-items-center justify-content-between'>\r\n                <Col className='text-left font-weight-light post_button'>\r\n                  <span\r\n                    className={`${\r\n                      like ? 'text-primary' : 'text-color_primary hover '\r\n                    } `}\r\n                    onClick={likeHandler}\r\n                  >\r\n                    <i\r\n                      className={` fa-thumbs-up icon ${\r\n                        like ? 'fas' : 'fal'\r\n                      }  mr-2`}\r\n                    ></i>\r\n                    <span className='text-2'>Like</span>\r\n                  </span>\r\n                </Col>\r\n                <Col className='text-center font-weight-light post_button'>\r\n                  <span className='hover' onClick={commentButtonHandler}>\r\n                    <i className='fal fa-comment-alt icon  mr-2'></i>\r\n                    <span className='text-2'>Comment</span>\r\n                  </span>\r\n                </Col>\r\n                <Col className='text-right font-weight-light post_button'>\r\n                  <span className='hover'>\r\n                    <i className='fal fa-share icon  mr-2'></i>\r\n                    <span className='text-2'>Share</span>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item className='text-center'>\r\n              {postComment &&\r\n                postComment.map((comment) => (\r\n                  <Row className={`align-items-center mb-2`}>\r\n                    <Col\r\n                      md={12}\r\n                      className='px-0 text-left d-flex align-items-center'\r\n                    >\r\n                      <Image\r\n                        className=' mr-2'\r\n                        src={comment.avatar}\r\n                        style={{ width: '8%' }}\r\n                        fluid='true'\r\n                        roundedCircle\r\n                      />\r\n                      <div className='bg-body_tertiary p-2 px-4 rounded-pill d-flex flex-column  justify-content-center'>\r\n                        <h6\r\n                          className='mb-0 text-1 d-flex align-items-center'\r\n                          style={{ textTransform: 'capitalize' }}\r\n                        >\r\n                          {comment.name} &nbsp;\r\n                          <span className='text-0 text-secodary font-weight-light my-auto'>\r\n                            -&nbsp;\r\n                            {moment(comment && comment.commentdate).format(\r\n                              'Do MMMM,h:mm a'\r\n                            )}\r\n                          </span>\r\n                        </h6>\r\n                        <p className='mb-0 text-1'>{comment.commentText}</p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n\r\n              {!postScreen && comment1 && (\r\n                <Row className='align-items-center mb-2'>\r\n                  <Col\r\n                    md={12}\r\n                    className='px-0 text-left d-flex align-items-center'\r\n                  >\r\n                    <Image\r\n                      className=' mr-2'\r\n                      src={comment1 && comment1.avatar}\r\n                      style={{ width: '10%' }}\r\n                      fluid='true'\r\n                      roundedCircle\r\n                    />\r\n                    <div className='bg-body_tertiary p-2 px-4 rounded-pill d-flex flex-column  justify-content-center'>\r\n                      <h6\r\n                        className='mb-0 text-1 d-flex align-items-center'\r\n                        style={{ textTransform: 'capitalize' }}\r\n                      >\r\n                        {comment1 && comment1.name} &nbsp;\r\n                        <span className='text-0 text-secodary font-weight-light my-auto'>\r\n                          -&nbsp;\r\n                          {moment(comment1 && comment1.commentdate).format(\r\n                            'Do MMMM,h:mm a'\r\n                          )}\r\n                        </span>\r\n                      </h6>\r\n                      <p className='mb-0 text-1'>\r\n                        {comment1 && comment1.commentText}\r\n                      </p>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              )}\r\n\r\n              {!postScreen && comment2 && (\r\n                <Row\r\n                  className={`align-items-center ${\r\n                    commentCount > 2 ? 'mb-2' : 'mb-3'\r\n                  }`}\r\n                >\r\n                  <Col\r\n                    md={12}\r\n                    className='px-0 text-left d-flex align-items-center'\r\n                  >\r\n                    <Image\r\n                      className=' mr-2'\r\n                      src={comment2 && comment2.avatar}\r\n                      style={{ width: '10%' }}\r\n                      fluid='true'\r\n                      roundedCircle\r\n                    />\r\n                    <div className='bg-body_tertiary p-2 px-4 rounded-pill d-flex flex-column  justify-content-center'>\r\n                      <h6\r\n                        className='mb-0 text-1 d-flex align-items-center'\r\n                        style={{ textTransform: 'capitalize' }}\r\n                      >\r\n                        {comment2 && comment2.name} &nbsp;\r\n                        <span className='text-0 text-secodary font-weight-light my-auto'>\r\n                          -&nbsp;\r\n                          {moment(comment2 && comment2.commentdate).format(\r\n                            'Do MMMM,h:mm a'\r\n                          )}\r\n                        </span>\r\n                      </h6>\r\n                      <p className='mb-0 text-1'>\r\n                        {comment2 && comment2.commentText}\r\n                      </p>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              )}\r\n\r\n              {!postScreen && commentCount > 2 && (\r\n                <Link to={`/post/${post._id}`}>\r\n                  <span className='mx-auto text-1 font-weight-light'>\r\n                    View More Comments\r\n                  </span>\r\n                </Link>\r\n              )}\r\n              {!postScreen && commentStatus && commentStatus.success && (\r\n                <Alert className='rounded-pill my-2 mb-3' variant='success'>\r\n                  You Succesfully commented to the post.{' '}\r\n                  <Link className='text-blue_primary' to={`/post/${post._id}`}>\r\n                    View Your Comment\r\n                  </Link>\r\n                </Alert>\r\n              )}\r\n              {commentStatus && commentStatus.loading ? (\r\n                <div className='d-flex align-items-center justify-content-center my-2 text-2'>\r\n                  <span className='mr-2'>Posting...</span>\r\n                  <Spinner\r\n                    as='span'\r\n                    variant='primary'\r\n                    animation='border'\r\n                    role='status'\r\n                    aria-hidden='true'\r\n                  />\r\n                </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {commentStatus && commentStatus.error && (\r\n                <Alert className='rounded-pill my-2 mb-3' variant='danger'>\r\n                  {commentStatus.error}\r\n                </Alert>\r\n              )}\r\n              <Row className='align-items-center mt-2'>\r\n                <Col md={10} className='px-0 d-flex'>\r\n                  <Image\r\n                    className=' mr-2'\r\n                    src={avatar}\r\n                    style={{ width: '10%' }}\r\n                    fluid='true'\r\n                    roundedCircle\r\n                  />\r\n                  <InputGroup style={{ width: '90%' }}>\r\n                    <FormControl\r\n                      ref={commentInput}\r\n                      className='bg-body_tertiary border-0 text-blue_secondary rounded-pill'\r\n                      type='text'\r\n                      placeholder='Write a comment'\r\n                      value={comment}\r\n                      size='lg'\r\n                      required\r\n                      onChange={(e) => setComment(e.target.value)}\r\n                    ></FormControl>\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col md={2} className='px-1'>\r\n                  <Button\r\n                    onClick={commentHandler}\r\n                    variant='primary rounded-pill px-4'\r\n                    size='small'\r\n                    disabled={!comment}\r\n                  >\r\n                    {commentStatus && commentStatus.loading\r\n                      ? 'Posting'\r\n                      : 'Post'}\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='d-flex justify-content-center'>\r\n      <Spinner\r\n        className='mt-5'\r\n        animation='border'\r\n        role='status'\r\n        variant='primary'\r\n        style={{ width: '10rem', height: '10rem' }}\r\n      >\r\n        <span className='sr-only'>Loading...</span>\r\n      </Spinner>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Post from './Post'\r\n\r\nimport Message from './Message'\r\nimport Loader from './Loader'\r\n\r\nconst PostList = ({ history }) => {\r\n  const postList = useSelector((state) => state.postList)\r\n  const { loading, posts, error } = postList\r\n\r\n  return error ? (\r\n    <Message>{error}</Message>\r\n  ) : loading ? (\r\n    <Loader />\r\n  ) : (\r\n    posts.map((post) => (\r\n      <Post\r\n        key={post._id}\r\n        post={post}\r\n        home={true}\r\n        comment1={post.comments[post.comments.length - 2]}\r\n        comment2={post.comments[post.comments.length - 1]}\r\n      />\r\n    ))\r\n  )\r\n\r\n  // return <Loader />\r\n}\r\n\r\nexport default PostList\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keywords' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Linkdev',\r\n  keywords: 'social,media,community,linkdev,share',\r\n  description:\r\n    ' Log into Linkdev to start sharing and connecting with developers and be the part of best community in the world.',\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getEmail } from '../actions/authActions'\r\nimport { getPosts } from '../actions/postActions'\r\nimport Header from '../components/Header'\r\nimport Footer from '../components/Footer'\r\nimport Message from '../components/Message'\r\n\r\nimport PostCreater from '../components/PostCreater'\r\nimport PostList from '../components/PostList'\r\nimport Meta from '../components/Meta'\r\n\r\nconst HomeScreen = ({ history, location }) => {\r\n  const dispatch = useDispatch()\r\n  const [verifiedAlert, setVerifiedAlert] = useState(true)\r\n\r\n  const params = location.pathname\r\n\r\n  const [show, setShow] = useState(true)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  console.log(userLogin)\r\n\r\n  const verifyEmail = useSelector((state) => state.verifyEmail)\r\n  const { message } = verifyEmail\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    dispatch(getPosts())\r\n  }, [history, userInfo, dispatch])\r\n\r\n  const verifyHandler = () => {\r\n    dispatch(getEmail())\r\n    setShow(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Meta title='Home - Linkdev' />\r\n      <Header history={history} user={userInfo} />\r\n\r\n      <div className='main_content mt-4'>\r\n        <Container fluid>\r\n          <Row className='justify-content-between'>\r\n            <Col md={3}></Col>\r\n            <Col md={5}>\r\n              {params && params.toString() === '/verified' && verifiedAlert && (\r\n                <Alert\r\n                  variant='success'\r\n                  onClose={() => setVerifiedAlert(false)}\r\n                  dismissible\r\n                >\r\n                  <h2 className='font-weight-light'>You are a creater now</h2>\r\n                </Alert>\r\n              )}\r\n              {params && params.toString() === '/notverified' && verifiedAlert && (\r\n                <Alert\r\n                  variant='danger'\r\n                  onClose={() => setVerifiedAlert(false)}\r\n                  dismissible\r\n                >\r\n                  <h2 className='font-weight-light'>\r\n                    Soory, There was Some Error verifying your Account.\r\n                  </h2>\r\n                </Alert>\r\n              )}\r\n              {message && (\r\n                <Message variant='success'>{message.message}</Message>\r\n              )}\r\n\r\n              {userInfo && !userInfo.isVerified && show && (\r\n                <Alert\r\n                  variant='warning'\r\n                  onClose={() => setShow(false)}\r\n                  dismissible\r\n                >\r\n                  <Alert.Heading>Verify Your Email Address</Alert.Heading>\r\n                  <h6 className='text-2 mb-2'>\r\n                    You are just Viewer Now. To be a creater and post amazing\r\n                    posts,\r\n                  </h6>\r\n                  <Button variant='outline-warning' onClick={verifyHandler}>\r\n                    Verify Email Address\r\n                  </Button>\r\n                </Alert>\r\n              )}\r\n\r\n              <PostCreater user={userInfo} history={history} />\r\n              <PostList />\r\n            </Col>\r\n            <Col md={3}></Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <Footer background='bg-body_secondary' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Container, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../actions/authActions'\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Footer from '../components/Footer'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('?')[1] : '/'\r\n\r\n  console.log(redirect)\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title='Linkdev - Login' />\r\n      <Container>\r\n        <Row className='login_mainContent align-items-center justify-content-between'>\r\n          <Col md={5}>\r\n            <Image src='./logo.svg' fluid='true' />\r\n            <p className='my-2 text_desc'>\r\n              Connect with developers all around the world on Linkdev\r\n            </p>\r\n          </Col>\r\n          <Col md={5} className='bg-body_secondary p-5 rounded-lg'>\r\n            <h1>Sign In</h1>\r\n            {error && <Message>{error}</Message>}\r\n            {/* {loading && <Loader />} */}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='email'>\r\n                <Form.Label className='form_label'>\r\n                  Username or Email\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className='bg-body_tertiary border-0 text-blue_secondary'\r\n                  size='lg'\r\n                  type='text'\r\n                  placeholder='Enter Username or Email'\r\n                  value={email}\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  className='bg-body_tertiary border-0'\r\n                  size='lg'\r\n                  type='password'\r\n                  placeholder='Enter password'\r\n                  value={password}\r\n                  required\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button\r\n                className='text-white'\r\n                type='submit'\r\n                variant='primary'\r\n                size='lg'\r\n                block\r\n              >\r\n                Sign In\r\n              </Button>\r\n            </Form>\r\n            <Link to={'/forgotpassword'} className='d-block text-center mt-3'>\r\n              Forgot Password?\r\n            </Link>\r\n            <hr className='bg-blue_secondary border-bottom-2' />\r\n            <Row className='py-3'>\r\n              <Col>\r\n                <LinkContainer to='/register'>\r\n                  <Button\r\n                    className='text-white'\r\n                    type='submit'\r\n                    variant='blue_primary'\r\n                    size='lg'\r\n                    block\r\n                  >\r\n                    Create New Account\r\n                  </Button>\r\n                </LinkContainer>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Image,\r\n  InputGroup,\r\n  Row,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { register } from '../actions/authActions'\r\nimport Footer from '../components/Footer'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [date, setDate] = useState('')\r\n  const [validated, setValidated] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo, error } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/')\r\n    }\r\n  }, [history, userInfo, validated])\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault()\r\n    const form = event.currentTarget\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation()\r\n    } else {\r\n      dispatch(register(email, password, name, date))\r\n    }\r\n\r\n    setValidated(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title='Create Your Account' />\r\n      <Container>\r\n        <Row className='login_mainContent align-items-center justify-content-between'>\r\n          <Col md={5}>\r\n            <Image src='./logo.svg' fluid='true' />\r\n            <p className='my-2 text_desc'>\r\n              Connect with developers all around the world on Linkdev\r\n            </p>\r\n          </Col>\r\n          <Col md={5} className='bg-body_secondary p-5 rounded-lg'>\r\n            <h1 className='mb-0'>Create Account</h1>\r\n            <p className='text-blue_secondary mt-0 mb-1'>It's quick and easy</p>\r\n            {error && <Message>{error}</Message>}\r\n            {/* {loading && <Loader />} */}\r\n\r\n            <Form onSubmit={submitHandler} noValidate validated={validated}>\r\n              <Form.Group className='mb-1' controlId='name'>\r\n                <Form.Label className='form_label mb-1'>Full Name</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    className='bg-body_tertiary border-0 text-blue_secondary rounded'\r\n                    type='text'\r\n                    placeholder='Name'\r\n                    value={name}\r\n                    required\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                  <Form.Control.Feedback type='valid'>\r\n                    Looks good!\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback type='invalid'>\r\n                    Please enter a Username\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group className='mb-1' controlId='email'>\r\n                <Form.Label className='mb-1 form_label'>\r\n                  Email Adress\r\n                </Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    className='bg-body_tertiary border-0 text-blue_secondary rounded'\r\n                    type='text'\r\n                    placeholder='Email Address'\r\n                    value={email}\r\n                    required\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  ></Form.Control>\r\n                  <Form.Control.Feedback type='valid'>\r\n                    Looks good!\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback type='invalid'>\r\n                    Please enter valid Email\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group className='mb-1' controlId='password'>\r\n                <Form.Label className='form_label mb-1'>Password</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    className='bg-body_tertiary border-0 text-blue_secondary rounded'\r\n                    type='password'\r\n                    placeholder='New Password'\r\n                    value={password}\r\n                    required\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  ></Form.Control>\r\n                  <Form.Control.Feedback type='valid'>\r\n                    Looks good!\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback type='invalid'>\r\n                    Please enter a Password\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='Birthdate'>\r\n                <Form.Label className='form_label mb-1'>Birthdate</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    className='bg-body_tertiary border-0 text-blue_secondary rounded'\r\n                    type='date'\r\n                    placeholder='Birthdate'\r\n                    value={date}\r\n                    required\r\n                    onChange={(e) => setDate(e.target.value)}\r\n                  ></Form.Control>\r\n                  <Form.Control.Feedback type='valid'>\r\n                    Looks good!\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback type='invalid'>\r\n                    Please enter a Birthdate\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Button\r\n                className='text-white'\r\n                type='submit'\r\n                variant='primary'\r\n                block\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Form>\r\n            <p className='text-0 mt-1'>\r\n              By clicking Sign Up, you accept our{' '}\r\n              <Link to={'/forgotpassword'}>Privacy Policy </Link> and{' '}\r\n              <Link>Terms of Service.</Link>\r\n            </p>\r\n\r\n            <hr className='bg-blue_secondary border-bottom-2' />\r\n            <Row>\r\n              <Col>\r\n                <LinkContainer to='/login'>\r\n                  <Button\r\n                    className='text-white'\r\n                    type='submit'\r\n                    variant='blue_primary'\r\n                    block\r\n                  >\r\n                    Sign In\r\n                  </Button>\r\n                </LinkContainer>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { logout } from '../actions/authActions'\r\nimport Footer from '../components/Footer'\r\nimport Meta from '../components/Meta'\r\n\r\nconst VerifyScreen = ({ location, history }) => {\r\n  const dispatch = useDispatch()\r\n  const query = location.search\r\n\r\n  useEffect(() => {\r\n    // if (query && query.toString() === '?verified') {\r\n    //   dispatch(logout())\r\n    // }\r\n    // if (!query) {\r\n    //   history.push('/')\r\n    // }\r\n  }, [dispatch, query, history])\r\n\r\n  return (\r\n    <>\r\n      <Meta title='Verify - Linkdev' />\r\n      {query && query.toString() === '?verified' ? (\r\n        <div\r\n          className='d-flex align-items-center justify-content-center'\r\n          style={{ minHeight: '90vh' }}\r\n        >\r\n          <Card className='rounded-lg col-md-4 text-center p-5'>\r\n            <Card.Title className=' text-3 text-primary'>\r\n              Your Account Has Been Verified\r\n            </Card.Title>\r\n\r\n            <i\r\n              className='fal fa-check-circle text-primary my-4'\r\n              style={{ fontSize: '10rem' }}\r\n            ></i>\r\n            <Card.Body>\r\n              <p className='text-2'>\r\n                We have Succesfully verified your account. Now you are the\r\n                creator of our community and post your posts.\r\n              </p>\r\n            </Card.Body>\r\n\r\n            <Link to='/' className='btn btn-primary btn-lg text-white'>\r\n              Continue\r\n            </Link>\r\n          </Card>\r\n        </div>\r\n      ) : (\r\n        query &&\r\n        query.toString() === '?notverified' && (\r\n          <div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{ minHeight: '90vh' }}\r\n          >\r\n            <Card className='rounded-lg col-md-4 text-center p-5'>\r\n              <Card.Title className=' text-3 text-danger'>\r\n                Account Verification Failed\r\n              </Card.Title>\r\n\r\n              <i\r\n                className='fal fa-times-circle text-danger my-4'\r\n                style={{ fontSize: '10rem' }}\r\n              ></i>\r\n              <Card.Body>\r\n                <p className='text-2'>\r\n                  We couldn't Verify your account. There was some error in the\r\n                  process. Please contact{' '}\r\n                  <span class='text-danger'>Sabin Subedi</span> From the link\r\n                  below.\r\n                </p>\r\n              </Card.Body>\r\n\r\n              <a\r\n                href='https://www.messenger.com/t/100003158884234'\r\n                className='btn btn-danger btn-lg text-white'\r\n              >\r\n                Contact Us\r\n              </a>\r\n            </Card>\r\n          </div>\r\n        )\r\n      )}\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VerifyScreen\r\n","import React, { useState, useEffect } from 'react'\r\n// import { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Container, Image } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\n// import { login } from '../actions/authActions'\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Footer from '../components/Footer'\r\n// import Message from '../components/Message'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n\r\n  // const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/')\r\n    }\r\n  }, [history, userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row className='login_mainContent align-items-center justify-content-between'>\r\n          <Col md={5}>\r\n            <Image src='./logo.svg' fluid='true' />\r\n            <p className='my-2 text_desc'>\r\n              Connect with developers all around the world on Linkdev\r\n            </p>\r\n          </Col>\r\n          <Col md={5} className='bg-body_secondary p-5 rounded-lg'>\r\n            <h1>Reset Password</h1>\r\n            <p className='text-secondary text-1'>\r\n              Enter your email address to request password change\r\n            </p>\r\n            {/* {error && <Message>{error}</Message>} */}\r\n            {/* {loading && <Loader />} */}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='email'>\r\n                <Form.Control\r\n                  className='bg-body_tertiary border-0 text-blue_secondary'\r\n                  size='lg'\r\n                  type='text'\r\n                  placeholder='Email Address'\r\n                  value={email}\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button\r\n                className='text-white'\r\n                type='submit'\r\n                variant='primary'\r\n                size='lg'\r\n                block\r\n              >\r\n                Request Password Reset\r\n              </Button>\r\n            </Form>\r\n\r\n            <hr className='bg-blue_secondary border-bottom-2 mb-2 mt-4' />\r\n\r\n            <p className='d-block text-primary text-center my-0'>\r\n              Remember Password ?\r\n            </p>\r\n            <Row className='py-3'>\r\n              <Col>\r\n                <LinkContainer to='/login'>\r\n                  <Button\r\n                    className='text-white'\r\n                    type='submit'\r\n                    variant='blue_primary'\r\n                    size='lg'\r\n                    block\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </LinkContainer>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","export const PROFILE_REQUEST = 'PROFILE_REQUEST'\r\nexport const PROFILE_SUCCESS = 'PROFILE_SUCCESS'\r\nexport const PROFILE_FAIL = 'PROFILE_FAIL'\r\n\r\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST'\r\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS'\r\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL'\r\n\r\nexport const UPDATE_PROFILE_AVATAR_REQUEST = 'UPDATE_PROFILE_AVATAR_REQUEST'\r\nexport const UPDATE_PROFILE_AVATAR_SUCCESS = 'UPDATE_PROFILE_AVATAR_SUCCESS'\r\nexport const UPDATE_PROFILE_AVATAR_FAIL = 'UPDATE_PROFILE_AVATAR_FAIL'\r\n","import { useState } from 'react'\r\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile } from '../actions/profileActions'\r\n\r\nfunction Profile(props) {\r\n  const dispatch = useDispatch()\r\n\r\n  const userProfile = useSelector((state) => state.userProfile)\r\n  const { profile } = userProfile\r\n\r\n  const [bio, setBio] = useState(profile.bio)\r\n  const [location, setLocation] = useState(profile.location)\r\n  const [facebook, setFacebook] = useState(profile.facebook)\r\n  const [twitter, setTwitter] = useState(profile.twitter)\r\n  const [github, setGithub] = useState(profile.github)\r\n  const [website, setWebsite] = useState(profile.website)\r\n  const [linkedin, setLinkedin] = useState(profile.linkedin)\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(\r\n      updateProfile(bio, facebook, twitter, linkedin, github, website, location)\r\n    )\r\n\r\n    props.onHide()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size='lg'\r\n      aria-labelledby='contained-modal-title-vcenter'\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id='contained-modal-title-vcenter'>\r\n          Edit Your Profile\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label className='form_label text-2'>Bio</Form.Label>\r\n            <Form.Control\r\n              className='bg-body_tertiary border-0 text-color_primary font-weight-light'\r\n              size='lg'\r\n              as='textarea'\r\n              rows={4}\r\n              placeholder='Add a Bio'\r\n              value={bio ? bio : ''}\r\n              onChange={(e) => setBio(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='location' as={Row}>\r\n            <Form.Label column sm='2' className='form_label text-2 pr-0 '>\r\n              <i className='fal fa-map-marker-alt mr-2'></i> Location\r\n            </Form.Label>\r\n            <Col className='pl-0' sm={10}>\r\n              <Form.Control\r\n                className='bg-body_tertiary border-0 ml-0 text-color_primary font-weight-light'\r\n                size='lg'\r\n                type='text'\r\n                placeholder='Location'\r\n                value={location ? location : ''}\r\n                onChange={(e) => setLocation(e.target.value)}\r\n              ></Form.Control>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='website' as={Row}>\r\n            <Form.Label column sm='2' className='form_label text-2 pr-0 '>\r\n              <i className='fal fa-link mr-2'></i> Website\r\n            </Form.Label>\r\n            <Col className='pl-0' sm={10}>\r\n              <Form.Control\r\n                className='bg-body_tertiary border-0 ml-0 text-color_primary font-weight-light'\r\n                size='lg'\r\n                type='text'\r\n                placeholder='Website'\r\n                value={website ? website : ''}\r\n                onChange={(e) => setWebsite(e.target.value)}\r\n              ></Form.Control>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='twitter' as={Row}>\r\n            <Form.Label column sm='2' className='form_label text-2 pr-0 '>\r\n              <i className='fab fa-twitter mr-2'></i> Twitter\r\n            </Form.Label>\r\n            <Col className='pl-0' sm={10}>\r\n              <Form.Control\r\n                className='bg-body_tertiary border-0 ml-0 text-color_primary font-weight-light'\r\n                size='lg'\r\n                type='text'\r\n                placeholder='Your Twitter Profile URL'\r\n                value={twitter ? twitter : ''}\r\n                onChange={(e) => setTwitter(e.target.value)}\r\n              ></Form.Control>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='github' as={Row}>\r\n            <Form.Label column sm='2' className='form_label text-2 pr-0 '>\r\n              <i className='fab fa-github mr-2'></i> Github\r\n            </Form.Label>\r\n            <Col className='pl-0' sm={10}>\r\n              <Form.Control\r\n                className='bg-body_tertiary border-0 ml-0 text-color_primary font-weight-light'\r\n                size='lg'\r\n                type='text'\r\n                placeholder='Your Github Profile URL'\r\n                value={github ? github : ''}\r\n                onChange={(e) => setGithub(e.target.value)}\r\n              ></Form.Control>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='facebook' as={Row}>\r\n            <Form.Label column sm='2' className='form_label text-2 pr-0 '>\r\n              <i className='fab fa-facebook mr-2'></i> Facebook\r\n            </Form.Label>\r\n            <Col className='pl-0' sm={10}>\r\n              <Form.Control\r\n                className='bg-body_tertiary border-0 ml-0 text-color_primary font-weight-light'\r\n                size='lg'\r\n                type='text'\r\n                placeholder='Your Facebook Profile URL'\r\n                value={facebook ? facebook : ''}\r\n                onChange={(e) => setFacebook(e.target.value)}\r\n              ></Form.Control>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='linkedin' as={Row}>\r\n            <Form.Label column sm='2' className='form_label text-2 pr-0 '>\r\n              <i className='fab fa-linkedin mr-2'></i> Linkedin\r\n            </Form.Label>\r\n            <Col className='pl-0' sm={10}>\r\n              <Form.Control\r\n                className='bg-body_tertiary border-0 ml-0 text-color_primary font-weight-light'\r\n                size='lg'\r\n                type='text'\r\n                placeholder='Your Linkedin Profile URL'\r\n                value={linkedin ? linkedin : ''}\r\n                onChange={(e) => setLinkedin(e.target.value)}\r\n              ></Form.Control>\r\n            </Col>\r\n          </Form.Group>\r\n          <Button\r\n            type='submit'\r\n            variant='primary'\r\n            size='lg'\r\n            className='mt-2 '\r\n            block\r\n            disabled={\r\n              !bio ||\r\n              !location ||\r\n              !facebook ||\r\n              !twitter ||\r\n              !github ||\r\n              !website ||\r\n              !linkedin\r\n            }\r\n          >\r\n            Update Profile\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import {\r\n  PROFILE_FAIL,\r\n  PROFILE_REQUEST,\r\n  PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_AVATAR_FAIL,\r\n  UPDATE_PROFILE_AVATAR_REQUEST,\r\n  UPDATE_PROFILE_AVATAR_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n} from '../constants/profileConstants'\r\nimport axios from 'axios'\r\n\r\nexport const getProfileDetail = (userId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PROFILE_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `https://linkdev-sabin.herokuapp.com/v1/profile/${userId}`,\r\n      config\r\n    )\r\n\r\n    dispatch({ type: PROFILE_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProfile =\r\n  (bio, facebook, twitter, linkedin, github, website, location) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: UPDATE_PROFILE_REQUEST })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n        headers: {\r\n          'Cotent-Type': 'application/json',\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.put(\r\n        `https://linkdev-sabin.herokuapp.com/v1/profile`,\r\n        { bio, facebook, twitter, linkedin, github, website, location },\r\n        config\r\n      )\r\n\r\n      dispatch({ type: UPDATE_PROFILE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: UPDATE_PROFILE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const updateProfileAvatar = (avatar) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PROFILE_AVATAR_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Cotent-Type': 'application/json',\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `https://linkdev-sabin.herokuapp.com/v1/profile/avatar`,\r\n      { avatar },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE_AVATAR_SUCCESS,\r\n      profile: data.profile,\r\n      post: data.post,\r\n    })\r\n\r\n    dispatch({\r\n      type: 'USER_AVATAR',\r\n      avatar: data.avatar,\r\n    })\r\n\r\n    // Get the existing data\r\n    var existing = localStorage.getItem('userInfo')\r\n\r\n    existing = existing ? JSON.parse(existing) : {}\r\n\r\n    // Add new data to localStorage Array\r\n    existing.avatar = data.avatar\r\n\r\n    // Save back to localStorage\r\n    localStorage.setItem('userInfo', JSON.stringify(existing))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PROFILE_AVATAR_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import { useState } from 'react'\r\nimport { Button, Form, Image, Modal } from 'react-bootstrap'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { updateProfileAvatar } from '../actions/profileActions'\r\n\r\nfunction ProfileAvatarModal(props) {\r\n  const dispatch = useDispatch()\r\n\r\n  //eslint-disable-next-line\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const userProfile = useSelector((state) => state.userProfile)\r\n  const { profile } = userProfile\r\n\r\n  const [avatar, setAvatar] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(updateProfileAvatar(avatar))\r\n\r\n    props.onHide()\r\n  }\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n        'https://linkdev-sabin.herokuapp.com/v1/upload',\r\n        formData,\r\n        config\r\n      )\r\n\r\n      setAvatar(data)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size='lg'\r\n      aria-labelledby='contained-modal-title-vcenter'\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id='contained-modal-title-vcenter'>\r\n          Edit Your Profile Picture\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Image\r\n          src={avatar ? avatar : profile && profile.user && profile.user.avatar}\r\n          fluid\r\n        />\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='email'>\r\n            <Form.File\r\n              className='border-0 text-color_primary font-weight-light'\r\n              label='Upload Your Profile Picture'\r\n              required\r\n              onChange={uploadFileHandler}\r\n            ></Form.File>\r\n          </Form.Group>\r\n\r\n          <Button\r\n            type='submit'\r\n            variant='primary'\r\n            size='lg'\r\n            className='mt-2 '\r\n            block\r\n          >\r\n            Update Profile\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatarModal\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap'\r\nimport Header from '../components/Header'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Footer from '../components/Footer'\r\nimport { getUserPosts } from '../actions/postActions'\r\nimport Post from '../components/Post'\r\nimport Loader from '../components/Loader'\r\nimport { getProfileDetail } from '../actions/profileActions'\r\nimport ProfileModal from '../components/ProfileModal'\r\nimport ProfileAvatarModal from '../components/ProfileAvatarModal'\r\nimport Meta from '../components/Meta'\r\n\r\nconst ProfileScreen = ({ history, match }) => {\r\n  const userId = match.params.id\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const [modalShow, setModalShow] = useState(false)\r\n  const [AvatarModalShow, setAvatarModalShow] = useState(false)\r\n\r\n  const userPostList = useSelector((state) => state.userPostList)\r\n  const { posts, loading } = userPostList\r\n\r\n  const userProfile = useSelector((state) => state.userProfile)\r\n  const { profile, loading: loadingUser } = userProfile\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    dispatch(getProfileDetail(userId))\r\n\r\n    dispatch(getUserPosts(userId))\r\n  }, [history, userInfo, dispatch, userId])\r\n\r\n  const clickHandler = () => {\r\n    setModalShow(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta\r\n        title={`${\r\n          profile && profile.user && profile.user.name\r\n            ? profile.user.name + ' -'\r\n            : ''\r\n        } Linkdev`}\r\n      />\r\n      <Header history={history} user={userInfo} />\r\n      {loading && loadingUser ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <section className='profile_body'>\r\n            <Container>\r\n              <Row className='mt-4'>\r\n                <Col md={5}>\r\n                  <Card className='p-4 rounded-lg'>\r\n                    <div className='card_image position-relative d-flex justify-content-center'>\r\n                      <Card.Img\r\n                        src={profile && profile.user && profile.user.avatar}\r\n                        fluid\r\n                        className='rounded-circle '\r\n                        style={{ width: '70%' }}\r\n                      />\r\n                      {userInfo &&\r\n                        profile &&\r\n                        profile.user &&\r\n                        userInfo.id === profile.user._id && (\r\n                          <>\r\n                            <ProfileAvatarModal\r\n                              show={AvatarModalShow}\r\n                              onHide={() => setAvatarModalShow(false)}\r\n                            />\r\n                            <div\r\n                              onClick={() => setAvatarModalShow(true)}\r\n                              className='image_icon icon'\r\n                            >\r\n                              <i className='fas fa-camera'></i>\r\n                            </div>\r\n                          </>\r\n                        )}\r\n                    </div>\r\n\r\n                    <Card.Body className='text-left'>\r\n                      <h1 className='text-5 font-weight-regular mb-0 name'>\r\n                        {profile && profile.user && profile.user.name}\r\n                      </h1>\r\n                      <h2 className='text-3 text-color_secondary font-weight-light'>\r\n                        {profile && profile.user && profile.user.isVerified\r\n                          ? 'Creator'\r\n                          : 'Viewer'}\r\n                      </h2>\r\n                      {profile && profile.bio && (\r\n                        <p className='user_bio'>{profile && profile.bio}</p>\r\n                      )}\r\n                      {profile && profile.location && (\r\n                        <p className='text-1 mb-1'>\r\n                          <i className='fal fa-location text-color_secondary icon mr-2'></i>\r\n                          {profile && profile.location}\r\n                        </p>\r\n                      )}\r\n\r\n                      {profile && profile.website && (\r\n                        <a\r\n                          rel='noreferrer'\r\n                          target='_blank'\r\n                          href={`https://${\r\n                            profile.website.startsWith('https://')\r\n                              ? profile.website.split('//')[1]\r\n                              : profile.website\r\n                          }`}\r\n                        >\r\n                          <p className='text-1 mb-1'>\r\n                            <i className='fal fa-link text-color_secondary  mr-2'></i>\r\n                            {profile && profile.website.startsWith('https://')\r\n                              ? profile.website.split('/')[\r\n                                  profile.website.split('/').length - 1\r\n                                ]\r\n                              : profile.website}\r\n                          </p>\r\n                        </a>\r\n                      )}\r\n\r\n                      {profile && profile.facebook && (\r\n                        <a\r\n                          rel='noreferrer'\r\n                          target='_blank'\r\n                          href={`https://${\r\n                            profile.facebook.startsWith('https://')\r\n                              ? profile.facebook.split('//')[1]\r\n                              : profile.facebook\r\n                          }`}\r\n                        >\r\n                          <p className='text-1 mb-1'>\r\n                            <i className='fab fa-facebook text-color_secondary  mr-2'></i>\r\n                            {profile && profile.facebook.startsWith('https://')\r\n                              ? profile.facebook.split('/')[\r\n                                  profile.facebook.split('/').length - 1\r\n                                ]\r\n                              : profile.facebook}\r\n                          </p>\r\n                        </a>\r\n                      )}\r\n                      {profile && profile.instagram && (\r\n                        <a\r\n                          rel='noreferrer'\r\n                          target='_blank'\r\n                          href={`https://${\r\n                            profile.instagram.startsWith('https://')\r\n                              ? profile.instagram.split('//')[1]\r\n                              : profile.instagram\r\n                          }`}\r\n                        >\r\n                          <p className='text-1 mb-1'>\r\n                            <i className='fab fa-instagram text-color_secondary  mr-2'></i>\r\n                            {profile && profile.instagram.startsWith('https://')\r\n                              ? profile.instagram.split('/')[\r\n                                  profile.instagram.split('/').length - 1\r\n                                ]\r\n                              : profile.instagram}\r\n                          </p>\r\n                        </a>\r\n                      )}\r\n                      {profile && profile.github && (\r\n                        <a\r\n                          rel='noreferrer'\r\n                          target='_blank'\r\n                          href={`https://${\r\n                            profile.github.startsWith('https://')\r\n                              ? profile.github.split('//')[1]\r\n                              : profile.github\r\n                          }`}\r\n                        >\r\n                          <p className='text-1 mb-1'>\r\n                            <i className='fab fa-github text-color_secondary  mr-2'></i>\r\n                            {profile && profile.github.startsWith('https://')\r\n                              ? profile.github.split('/')[\r\n                                  profile.github.split('/').length - 1\r\n                                ]\r\n                              : profile.github}\r\n                          </p>\r\n                        </a>\r\n                      )}\r\n                      {profile && profile.twitter && (\r\n                        <a\r\n                          rel='noreferrer'\r\n                          target='_blank'\r\n                          href={`https://${\r\n                            profile.twitter.startsWith('https://')\r\n                              ? profile.twitter.split('//')[1]\r\n                              : profile.twitter\r\n                          }`}\r\n                        >\r\n                          <p className='text-1 mb-1'>\r\n                            <i className='fab fa-twitter text-color_secondary  mr-2'></i>\r\n                            {profile && profile.twitter.startsWith('https://')\r\n                              ? profile.twitter.split('/')[\r\n                                  profile.twitter.split('/').length - 1\r\n                                ]\r\n                              : profile.twitter}\r\n                          </p>\r\n                        </a>\r\n                      )}\r\n\r\n                      {profile && profile.linkedin && (\r\n                        <a\r\n                          rel='noreferrer'\r\n                          target='_blank'\r\n                          href={`https://${\r\n                            profile.linkedin.startsWith('https://')\r\n                              ? profile.linkedin.split('//')[1]\r\n                              : profile.linkedin\r\n                          }`}\r\n                        >\r\n                          <p className='text-1 mb-1'>\r\n                            <i className='fab fa-linkedin text-color_secondary  mr-2'></i>\r\n                            {(profile &&\r\n                              profile.linkedin.startsWith('https://')) ||\r\n                            profile.linkedin.startsWith('http://')\r\n                              ? profile.linkedin.split('/')[\r\n                                  profile.linkedin.split('/').length - 1\r\n                                ]\r\n                              : profile.linkedin}\r\n                          </p>\r\n                        </a>\r\n                      )}\r\n                      {userInfo &&\r\n                        profile &&\r\n                        profile.user &&\r\n                        userInfo &&\r\n                        userInfo.id &&\r\n                        profile.user._id.toString() ===\r\n                          userInfo.id.toString() && (\r\n                          <Button\r\n                            variant='outline-primary mt-4'\r\n                            onClick={clickHandler}\r\n                            block\r\n                          >\r\n                            Edit Profile\r\n                          </Button>\r\n                        )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                <Col md={7}>\r\n                  <h2>Your Posts</h2>\r\n\r\n                  {posts &&\r\n                    posts.map((post) => (\r\n                      <Post\r\n                        key={post._id}\r\n                        comment1={post.comments[post.comments.length - 2]}\r\n                        comment2={post.comments[post.comments.length - 1]}\r\n                        post={post}\r\n                      />\r\n                    ))}\r\n                </Col>\r\n              </Row>\r\n              {profile && (\r\n                <>\r\n                  <ProfileModal\r\n                    show={modalShow}\r\n                    onHide={() => setModalShow(false)}\r\n                  />\r\n                </>\r\n              )}\r\n            </Container>\r\n          </section>\r\n\r\n          <Footer background='bg-body_secondary' />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getPostById } from '../actions/postActions'\r\nimport Header from '../components/Header'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport Post from '../components/Post'\r\n\r\nconst PostScreen = ({ history, match }) => {\r\n  const postId = match.params.id\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const postById = useSelector((state) => state.postById)\r\n  const { loading, post, error } = postById\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    dispatch(getPostById(postId))\r\n  }, [history, userInfo, dispatch, postId])\r\n\r\n  return (\r\n    <>\r\n      <Meta title={`${post ? post.name : ''} - Post`} />\r\n      <Header history={history} user={userInfo} />\r\n      <Row className='justify-content-between'>\r\n        <Col md={3}></Col>\r\n        <Col md={6}>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message>{error.message}</Message>\r\n          ) : (\r\n            post && (\r\n              <Post post={post} postComment={post.comments} postScreen={true} />\r\n            )\r\n          )}\r\n        </Col>\r\n        <Col md={3}></Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport HomeScreen from './screens/HomeScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport VerifyScreen from './screens/VerifyScreen'\nimport ForgotPasswordScreen from './screens/ForgotPasswordScreen'\nimport 'emoji-mart/css/emoji-mart.css'\nimport ProfileScreen from './screens/ProfileScreen'\nimport PostScreen from './screens/PostScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <main>\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/forgotpassword' component={ForgotPasswordScreen} />\n        <Route path='/profile/:id' component={ProfileScreen} />\n        <Route path='/verify/:token' component={VerifyScreen} />\n        <Route path='/post/:id' component={PostScreen} />\n        <Route path='/verified' component={VerifyScreen} />\n        <Route path='/' component={HomeScreen} exact />\n      </main>\n    </Router>\n  )\n}\n\nexport default App\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { userLoginReducer, verifyEmailReducer } from './reducers/authReducers'\r\nimport {\r\n  userAvatarReducer,\r\n  userProfileReducer,\r\n} from './reducers/profileReducers'\r\n\r\nimport {\r\n  commentStatusReducer,\r\n  postByIdReducer,\r\n  postCreateReducer,\r\n  postListReducer,\r\n  userPostListReducer,\r\n} from './reducers/postReducers'\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  postList: postListReducer,\r\n  postCreate: postCreateReducer,\r\n  verifyEmail: verifyEmailReducer,\r\n  userPostList: userPostListReducer,\r\n  userProfile: userProfileReducer,\r\n  userAvatar: userAvatarReducer,\r\n  commentStatus: commentStatusReducer,\r\n  postById: postByIdReducer,\r\n})\r\n\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : ''\r\n\r\nconst intialState = {\r\n  userLogin: {\r\n    userInfo: userInfoFromLocalStorage,\r\n  },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\n// console.log(userInfoFromLocalStorage)\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  intialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_VERIFY_FAIL,\r\n  USER_VERIFY_REQUEST,\r\n  USER_VERIFY_SUCCESS,\r\n} from '../constants/authConstant'\r\n\r\nexport const userLoginReducer = (state = { userInfo: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const verifyEmailReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_VERIFY_REQUEST:\r\n      return { loading: true }\r\n    case USER_VERIFY_SUCCESS:\r\n      return { loading: false, sucess: true, message: action.payload }\r\n    case USER_VERIFY_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  POST_BY_ID_FAIL,\r\n  POST_BY_ID_REQUEST,\r\n  POST_BY_ID_SUCCESS,\r\n  POST_COMMENT_FAIL,\r\n  POST_COMMENT_REQUEST,\r\n  POST_COMMENT_SUCCESS,\r\n  POST_CREATE_FAIL,\r\n  POST_CREATE_REQUEST,\r\n  POST_CREATE_SUCCESS,\r\n  POST_LIKE_FAIL,\r\n  POST_LIKE_REQUEST,\r\n  POST_LIKE_SUCCESS,\r\n  POST_LIST_FAIL,\r\n  POST_LIST_REQUEST,\r\n  POST_LIST_SUCCESS,\r\n  USER_POST_LIST_FAIL,\r\n  USER_POST_LIST_REQUEST,\r\n  USER_POST_LIST_SUCCESS,\r\n} from '../constants/postConstant'\r\nimport { UPDATE_PROFILE_AVATAR_SUCCESS } from '../constants/profileConstants'\r\n\r\nexport const postListReducer = (state = { posts: [] }, action) => {\r\n  switch (action.type) {\r\n    case POST_LIST_REQUEST:\r\n      return { loading: true, posts: [] }\r\n    case POST_LIST_SUCCESS:\r\n      return { loading: false, posts: action.payload }\r\n    case POST_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POST_LIKE_REQUEST:\r\n      return { ...state, likeLoading: true }\r\n    case POST_LIKE_SUCCESS:\r\n      return { likeLoading: false, success: true, posts: action.payload }\r\n    case POST_LIKE_FAIL:\r\n      return {\r\n        ...state,\r\n        likeLoading: false,\r\n        error: action.payload,\r\n      }\r\n    case POST_CREATE_SUCCESS:\r\n      return { ...state, loading: false, success: true, posts: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userPostListReducer = (state = { posts: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_POST_LIST_REQUEST:\r\n      return { loading: true, posts: [] }\r\n    case USER_POST_LIST_SUCCESS:\r\n      return { loading: false, posts: action.payload }\r\n    case USER_POST_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case POST_LIKE_REQUEST:\r\n      return { ...state, likeLoading: true }\r\n    case POST_LIKE_SUCCESS:\r\n      return { likeLoading: false, success: true, posts: action.userPostList }\r\n    case POST_LIKE_FAIL:\r\n      return {\r\n        ...state,\r\n        likeLoading: false,\r\n        error: action.payload,\r\n      }\r\n    case UPDATE_PROFILE_AVATAR_SUCCESS:\r\n      return { loading: false, posts: action.post }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const postCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POST_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case POST_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const commentStatusReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POST_COMMENT_REQUEST:\r\n      return { loading: true }\r\n    case POST_COMMENT_SUCCESS:\r\n      return { loading: false, success: true, status: action.payload }\r\n    case POST_COMMENT_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const postByIdReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POST_BY_ID_REQUEST:\r\n      return { loading: true }\r\n    case POST_BY_ID_SUCCESS:\r\n      return { loading: false, post: action.payload }\r\n    case POST_BY_ID_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  PROFILE_FAIL,\r\n  PROFILE_REQUEST,\r\n  PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_AVATAR_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n} from '../constants/profileConstants'\r\n\r\nexport const userProfileReducer = (state = { profile: {} }, action) => {\r\n  switch (action.type) {\r\n    case PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case PROFILE_SUCCESS:\r\n      return { loading: false, profile: action.payload }\r\n    case PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, profile: action.payload }\r\n    case UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case UPDATE_PROFILE_AVATAR_SUCCESS:\r\n      return { loading: false, profile: action.profile }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userAvatarReducer = (state = { avatar: {} }, action) => {\r\n  switch (action.type) {\r\n    case 'USER_AVATAR':\r\n      return { avatar: action.avatar }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './sass/main.css'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}